{"version":3,"sources":["components/Auth/UseFirebase.js","components/Auth/AuthProvider.js","components/Modal/ModalSignOut.js","components/Header/Header.js","components/Modal/Modal.js","components/Footer/Footer.js","components/ComplaintForm/ComplaintForm.js","components/Complaint/Complaint.js","components/Loading/Loading.js","components/Error/Error.js","components/Home/Home.js","components/Signing/Signing.js","components/Profile/Profile.js","components/ContactMe/ContactMe.js","components/Auth/PrivateRoute.js","components/ComplaintCard/ComplaintCard.js","components/Dashboard/DashboardCustomer.js","components/Dashboard/DashboardStaff.js","components/Dashboard/DashBoardAdmin.js","components/Dashboard/DashboardSuperAdmin.js","components/ComplaintForm/ComplaintFormUpdate.js","App.js","reportWebVitals.js","index.js"],"names":["config","app","initializeApp","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","getAuth","db","getDatabase","useFirebase","user","setUser","useState","users","setUsers","organizations","setOrganizations","customers","setCustomers","tickets","setTickets","reports","setReports","enquiries","setEnquiries","staff","setStaff","isLoading","setIsLoading","getUsers","usersRef","ref","onValue","snapshot","usersData","val","Object","entries","map","_ref","key","value","id","getOrganizations","organizationsRef","organizationsData","_ref2","getTickets","ticketsRef","ticketsData","_ref3","getStaff","staffRef","staffData","_ref4","getCustomers","customersRef","customersData","_ref5","getReports","reportRef","reportsData","_ref6","getEnquiries","enquiryRef","enquiriesData","_ref7","useEffect","signOutUser","async","localStorage","removeItem","signOut","error","console","getCurrentUser","onAuthStateChanged","signUpUser","email","password","userCredential","createUserWithEmailAndPassword","log","signInUser","signInWithEmailAndPassword","resetPassword","sendPasswordResetEmail","sendMailVerification","sendEmailVerification","userId","getCurrentUserId","firebase","currentUser","uid","addUser","newUserId","push","newUser","dateAdded","Date","now","set","child","getUserInfo","userRef","get","exists","updateUser","updatedUser","update","deleteUser","remove","getUserRole","userDocRef","docSnap","role","addOrganization","organizationRef","newOrgId","organizationData","orgDateJoined","getOrganizationInfo","orgDocRef","orgId","updateOrganization","deleteOrganization","getOrganizationByName","name","orgName","getOrganizationIdByName","addTicket","newTicketId","ticketData","updateTicket","ticketId","updatedTicketData","ticketRef","deleteTicket","getTicketInfo","ticketDoc","addStaff","newStaffId","updateStaff","staffId","updatedStaffData","deleteStaff","getStaffInfo","staffDoc","addCustomer","newCustomerId","customerData","updateCustomer","customerId","updatedCustomerData","customerRef","deleteCustomer","getCustomerInfo","customerDoc","getReportInfo","reportId","docRef","addReport","newReportId","reportData","deleteReport","getEnquiryInfo","enquiryId","addEnquiry","newEnquiryId","enquiryData","deleteEnquiry","AuthContext","createContext","AuthProvider","children","storedUser","getItem","JSON","parse","unsubscribe","_jsx","Provider","ModalSignOut","show","onClose","loading","setLoading","navigate","useNavigate","useContext","handleClose","className","_jsxs","onClick","disabled","Header","formik","useFormik","initialValues","search","validationSchema","yup","trim","min","max","onSubmit","values","showModal","setShowModal","location","useLocation","getLocation","setLocation","closeModal","handleAccountSignOut","event","preventDefault","pathname","_Fragment","Link","to","src","alt","style","height","width","type","concat","color","handleSubmit","placeholder","onChange","handleChange","isValid","Modal","Footer","modalContent","setModalContent","href","getFullYear","ComplaintForm","ComplaintFormSchema","Yup","shape","fullName","required","contactNumber","category","description","preferredContactMethod","userEmail","history","Formik","handleComplaintSubmit","resetForm","complaint","toString","status","dateCreated","toISOString","createdBy","storedComplaints","complaints","setItem","stringify","setTimeout","isSubmitting","Form","htmlFor","Field","ErrorMessage","component","as","Complaint","setComplaints","showEditModal","setShowEditModal","selectedComplaint","setSelectedComplaint","response","axios","data","fetchComplaints","urgencyLevel","dateOfIncident","length","handleViewComplaint","complaintId","_id","handleEditComplaint","delete","filter","c","handleDeleteComplaint","onHide","closeButton","Title","Body","put","updatedComplaints","handleBlur","errors","touched","onBlur","Button","Loading","Error","Home","scrollToTop","window","scrollTo","featuresRef","useRef","testimonialsRef","scrollToAboutUs","document","querySelector","scrollIntoView","behavior","scrollToFeatures","current","scrollToTestimonials","scrollToContactMe","Carousel","autoPlay","infiniteLoop","showThumbs","Signing","showSignIn","setShowSignIn","handleForgotPasswordClick","forgotPasswordValidationSchema","handleReset","isResetting","handleShowSignUp","handleShowSignIn","confirmPassword","subscriptionTier","signInValidationSchema","signUpValidationSchema","oneOf","setSubmitting","userRole","userData","result","message","Promise","all","orgPlan","orgStatus","notifications","todo_list","code","setResetting","toggle","Profile","ContactMe","action","PrivateRoute","Outlet","Navigate","replace","ComplaintCard","onUpdate","onDelete","title","toLocaleDateString","DashboardCustomer","userComplaints","setUserComplaints","saveComplaints","updateComplaint","updatedComplaint","deleteComplaint","DashboardStaff","DashboardAdmin","DashboardSuperAdmin","ComplaintFormUpdate","useParams","setInitialValues","foundComplaint","find","index","findIndex","App","timeout","clearTimeout","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","React","StrictMode"],"mappings":"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","file":"static/js/main.33736c2b.chunk.js","sourcesContent":["import { initializeApp } from \"firebase/app\";\r\nimport {\r\n  getAuth,\r\n  createUserWithEmailAndPassword,\r\n  signInWithEmailAndPassword,\r\n  sendPasswordResetEmail,\r\n  signOut,\r\n  onAuthStateChanged,\r\n  sendEmailVerification,\r\n} from \"firebase/auth\";\r\nimport {\r\n  getDatabase,\r\n  ref,\r\n  set,\r\n  get,\r\n  child,\r\n  update,\r\n  remove,\r\n  onValue,\r\n  push,\r\n} from \"firebase/database\";\r\n\r\nimport { useState, useEffect } from \"react\";\r\nimport { config } from \"dotenv\";\r\nimport firebase from 'firebase/compat/app';\r\nimport 'firebase/compat/auth';\r\n\r\n// Load environment variables from .env\r\nconfig();\r\n\r\n// Firebase configuration\r\nconst firebaseConfig = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID,\r\n};\r\n\r\n// Initialize Firebase\r\nconst app = initializeApp(firebaseConfig);\r\nconst auth = getAuth(app);\r\nconst db = getDatabase(app);\r\n\r\n// Custom Hook for Firebase Interactions\r\nconst useFirebase = () => {\r\n  // State for storing data\r\n  const [user, setUser] = useState(null);\r\n  const [users, setUsers] = useState([]);\r\n  const [organizations, setOrganizations] = useState([]);\r\n  const [customers, setCustomers] = useState([]);\r\n  const [tickets, setTickets] = useState([]);\r\n  const [reports, setReports] = useState([]);\r\n  const [enquiries, setEnquiries] = useState([]);\r\n  const [staff, setStaff] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  \r\n\r\n  // Sign out\r\n  const signOutUser = async () => {\r\n    localStorage.removeItem(\"user\");\r\n    try {\r\n      await signOut(auth);\r\n      setUser(null);\r\n    } catch (error) {\r\n      console.error(\"Error signing out:\", error);\r\n    }\r\n  };\r\n\r\n  // Get current user\r\n  const getCurrentUser = () => {\r\n    return onAuthStateChanged(auth, (user) => {\r\n      setUser(user);\r\n      setIsLoading(false);\r\n    });\r\n  };\r\n\r\n  // --- AUTHENTICATION ---\r\n\r\n  const getCurrentUserId = () => {\r\n    const user = firebase.auth().currentUser;\r\n    if (user) {\r\n      return user.uid;\r\n    } else {\r\n      // User is not authenticated\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Sign up a new user\r\n  const signUpUser = async (email, password) => {\r\n    try {\r\n      const userCredential = await createUserWithEmailAndPassword(\r\n        auth,\r\n        email,\r\n        password\r\n      );\r\n      // handle successful sign-up\r\n      console.log(\"Account created successfully\");\r\n      return userCredential;\r\n    } catch (error) {\r\n      // handle errors\r\n      console.error(\"Error signing up:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Sign in an existing user\r\n  const signInUser = async (email, password) => {\r\n    try {\r\n      const userCredential = await signInWithEmailAndPassword(\r\n        auth,\r\n        email,\r\n        password\r\n      );\r\n      // handle successful sign-in\r\n      console.log(\"Logged in successfully\");\r\n      return userCredential;\r\n    } catch (error) {\r\n      // handle errors\r\n      console.error(\"Error signing in:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Send a password reset email\r\n  const resetPassword = async (email) => {\r\n    try {\r\n      await sendPasswordResetEmail(auth, email);\r\n      // handle successful password reset email sent\r\n      console.log(\"Password reset email sent successfully\");\r\n    } catch (error) {\r\n      // handle errors\r\n      console.error(\"Error sending password reset email:\", error);\r\n    }\r\n  };\r\n\r\n  // Send an email verification to the user\r\n  const sendMailVerification = async (userId) => {\r\n    try {\r\n      await sendEmailVerification(userId);\r\n      console.log(\"Verification email sent successfully\");\r\n    } catch (error) {\r\n      console.error(\"Error sending verification email:\", error);\r\n    }\r\n  };\r\n\r\n  // --- USERS ---\r\n\r\n  // Get all users (using onValue for real-time updates)\r\n  const getUsers = () => {\r\n    const usersRef = ref(db, \"users\");\r\n    onValue(usersRef, (snapshot) => {\r\n      const usersData = snapshot.val();\r\n      if (usersData) {\r\n        setUsers(\r\n          Object.entries(usersData).map(([key, value]) => ({\r\n            id: key,\r\n            ...value,\r\n          }))\r\n        );\r\n      } else {\r\n        setUsers([]);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Add a user\r\n  const addUser = async (newUser) => {\r\n    try {\r\n      const usersRef = ref(db, \"users\");\r\n      const newUserId = push(usersRef).key;\r\n      newUser.dateAdded = Date.now();\r\n      await set(child(usersRef, newUserId), newUser);\r\n    } catch (error) {\r\n      console.error(\"Error adding user:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Get user info by ID\r\n  const getUserInfo = async (userId) => {\r\n    try {\r\n      const userRef = ref(db, \"users\", userId);\r\n      const snapshot = await get(userRef);\r\n      if (snapshot.exists()) {\r\n        return { id: userId, ...snapshot.val() };\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting user info:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Update a user\r\n  const updateUser = async (userId, updatedUser) => {\r\n    try {\r\n      const userRef = ref(db, \"users\", userId);\r\n      await update(userRef, updatedUser);\r\n    } catch (error) {\r\n      console.error(\"Error updating user:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Delete a user\r\n  const deleteUser = async (userId) => {\r\n    try {\r\n      const userRef = ref(db, \"users\", userId);\r\n      await remove(userRef);\r\n    } catch (error) {\r\n      console.error(\"Error deleting user:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Get user role by ID\r\n  const getUserRole = async (userId) => {\r\n    try {\r\n      const userDocRef = ref(db, \"users\", userId);\r\n      const docSnap = await get(userDocRef);\r\n      if (docSnap.exists()) {\r\n        return docSnap.val().role;\r\n      } else {\r\n        console.error(\"User document not found:\", userId);\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting user role:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // --- ORGANIZATIONS ---\r\n\r\n  // Get all organizations (using onValue for real-time updates)\r\n  const getOrganizations = () => {\r\n    const organizationsRef = ref(db, \"org\");\r\n    onValue(organizationsRef, (snapshot) => {\r\n      const organizationsData = snapshot.val();\r\n      if (organizationsData) {\r\n        setOrganizations(\r\n          Object.entries(organizationsData).map(([key, value]) => ({\r\n            id: key,\r\n            ...value,\r\n          }))\r\n        );\r\n      } else {\r\n        setOrganizations([]);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Add an organization to the database\r\n  const addOrganization = async (organizationData) => {\r\n    try {\r\n      const organizationRef = ref(db, \"org\");\r\n      const newOrgId = push(organizationRef).key; // Generate unique ID\r\n      organizationData.orgDateJoined = Date.now(); // Add timestamp\r\n      await set(child(organizationRef, newOrgId), organizationData);\r\n    } catch (error) {\r\n      console.error(\"Error adding organization:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Get organization details by ID\r\n  const getOrganizationInfo = async (orgId) => {\r\n    try {\r\n      const orgDocRef = ref(db, \"org\", orgId);\r\n      const docSnap = await get(orgDocRef);\r\n      if (docSnap.exists()) {\r\n        return { id: orgId, ...docSnap.val() };\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting organization details:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Update the organization\r\n  const updateOrganization = async (orgId, organizationData) => {\r\n    try {\r\n      const organizationRef = ref(db, \"org\", orgId);\r\n      await update(organizationRef, organizationData);\r\n    } catch (error) {\r\n      console.error(\"Error updating organization:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Delete an organization\r\n  const deleteOrganization = async (orgId) => {\r\n    try {\r\n      const organizationRef = ref(db, \"org\", orgId);\r\n      await remove(organizationRef);\r\n    } catch (error) {\r\n      console.error(\"Error deleting organization:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Get organization by name\r\n  const getOrganizationByName = async (orgName) => {\r\n    try {\r\n      const organizationsRef = ref(db, \"org\");\r\n      const snapshot = await get(organizationsRef);\r\n      if (snapshot.exists()) {\r\n        const organizationsData = snapshot.val();\r\n        for (const orgId in organizationsData) {\r\n          if (organizationsData[orgId].name === orgName) {\r\n            return { id: orgId, ...organizationsData[orgId] };\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error(\"Error getting organization by name:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // Get organization ID by name\r\n  const getOrganizationIdByName = async (orgName) => {\r\n    try {\r\n      const organizationsRef = ref(db, \"org\");\r\n      const snapshot = await get(organizationsRef);\r\n      if (snapshot.exists()) {\r\n        const organizationsData = snapshot.val();\r\n        for (const orgId in organizationsData) {\r\n          if (organizationsData[orgId].name === orgName) {\r\n            return orgId;\r\n          }\r\n        }\r\n      }\r\n      return null;\r\n    } catch (error) {\r\n      console.error(\"Error getting organization ID by name:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // --- TICKETS ---\r\n\r\n  // Get all tickets for a specific organization (using onValue for real-time updates)\r\n  const getTickets = () => {\r\n    const ticketsRef = ref(db, \"org\", \"tickets\");\r\n    onValue(ticketsRef, (snapshot) => {\r\n      const ticketsData = snapshot.val();\r\n      if (ticketsData) {\r\n        setTickets(\r\n          Object.entries(ticketsData).map(([key, value]) => ({\r\n            id: key,\r\n            ...value,\r\n          }))\r\n        );\r\n      } else {\r\n        setTickets([]);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Add a ticket to a specific organization\r\n  const addTicket = async (ticketData) => {\r\n    try {\r\n      const ticketsRef = ref(db, \"org\", \"tickets\");\r\n      const newTicketId = push(ticketsRef).key; // Generate unique ID\r\n      ticketData.dateAdded = Date.now(); // Add timestamp\r\n      await set(child(ticketsRef, newTicketId), ticketData);\r\n    } catch (error) {\r\n      console.error(\"Error adding ticket:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Update a ticket for a specific organization\r\n  const updateTicket = async (ticketId, updatedTicketData) => {\r\n    try {\r\n      const ticketRef = ref(db, \"org\", \"tickets\", ticketId);\r\n      await update(ticketRef, updatedTicketData);\r\n    } catch (error) {\r\n      console.error(\"Error updating ticket:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Delete a ticket for a specific organization\r\n  const deleteTicket = async (ticketId) => {\r\n    try {\r\n      const ticketRef = ref(db, \"org\", \"tickets\", ticketId);\r\n      await remove(ticketRef);\r\n    } catch (error) {\r\n      console.error(\"Error deleting ticket:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Get details of a ticket\r\n  const getTicketInfo = async (ticketId) => {\r\n    try {\r\n      const ticketRef = ref(db, \"org\", \"tickets\", ticketId);\r\n      const ticketDoc = await get(ticketRef);\r\n      if (ticketDoc.exists()) {\r\n        return { id: ticketId, ...ticketDoc.val() };\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting ticket:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // --- STAFF ---\r\n\r\n  // Get all staff for a specific organization (using onValue for real-time updates)\r\n  const getStaff = () => {\r\n    const staffRef = ref(db, \"staff\");\r\n    onValue(staffRef, (snapshot) => {\r\n      const staffData = snapshot.val();\r\n      if (staffData) {\r\n        setStaff(\r\n          Object.entries(staffData).map(([key, value]) => ({\r\n            id: key,\r\n            ...value,\r\n          }))\r\n        );\r\n      } else {\r\n        setStaff([]);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Add a staff member to a specific organization\r\n  const addStaff = async (staffData) => {\r\n    try {\r\n      const staffRef = ref(db, \"staff\");\r\n      const newStaffId = push(staffRef).key; // Generate unique ID\r\n      staffData.dateAdded = Date.now(); // Add timestamp\r\n      await set(child(staffRef, newStaffId), staffData);\r\n    } catch (error) {\r\n      console.error(\"Error adding staff:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Update a staff member for a specific organization\r\n  const updateStaff = async (staffId, updatedStaffData) => {\r\n    try {\r\n      const staffRef = ref(db, \"staff\", staffId);\r\n      await update(staffRef, updatedStaffData);\r\n    } catch (error) {\r\n      console.error(\"Error updating staff:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Delete a staff member for a specific organization\r\n  const deleteStaff = async (staffId) => {\r\n    try {\r\n      const staffRef = ref(db, \"staff\", staffId);\r\n      await remove(staffRef); // remove from organization\r\n      const userRef = ref(db, \"users\", staffId);\r\n      await remove(userRef); // remove from users\r\n    } catch (error) {\r\n      console.error(\"Error deleting staff:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Get a specific staff member for a specific organization\r\n  const getStaffInfo = async (staffId) => {\r\n    try {\r\n      const staffRef = ref(db, \"staff\", staffId);\r\n      const staffDoc = await get(staffRef);\r\n      if (staffDoc.exists()) {\r\n        return { id: staffId, ...staffDoc.val() };\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting staff:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  // --- CUSTOMERS ---\r\n\r\n  // Get all customers for a specific organization (using onValue for real-time updates)\r\n  const getCustomers = () => {\r\n    const customersRef = ref(db, \"org\", \"customers\");\r\n    onValue(customersRef, (snapshot) => {\r\n      const customersData = snapshot.val();\r\n      if (customersData) {\r\n        setCustomers(\r\n          Object.entries(customersData).map(([key, value]) => ({\r\n            id: key,\r\n            ...value,\r\n          }))\r\n        );\r\n      } else {\r\n        setCustomers([]);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Add a customer to a specific organization\r\n  const addCustomer = async (customerData) => {\r\n    try {\r\n      const customersRef = ref(db, \"org\", \"customers\");\r\n      const newCustomerId = push(customersRef).key; // Generate unique ID\r\n      customerData.dateAdded = Date.now(); // Add timestamp\r\n      await set(child(customersRef, newCustomerId), customerData);\r\n    } catch (error) {\r\n      console.error(\"Error adding customer:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Update a customer for a specific organization\r\n  const updateCustomer = async (customerId, updatedCustomerData) => {\r\n    try {\r\n      const customerRef = ref(db, \"org\", \"customers\", customerId);\r\n      await update(customerRef, updatedCustomerData);\r\n    } catch (error) {\r\n      console.error(\"Error updating customer:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Delete a customer for a specific organization\r\n  const deleteCustomer = async (customerId) => {\r\n    try {\r\n      const customerRef = ref(db, \"org\", \"customers\", customerId);\r\n      await remove(customerRef); // remove from organization\r\n      const userRef = ref(db, \"users\", customerId);\r\n      await remove(userRef); // remove from users\r\n    } catch (error) {\r\n      console.error(\"Error deleting customer:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Get a specific customer for a specific organization\r\n  const getCustomerInfo = async (customerId) => {\r\n    try {\r\n      const customerRef = ref(db, \"org\", \"customers\", customerId);\r\n      const customerDoc = await get(customerRef);\r\n      if (customerDoc.exists()) {\r\n        return { id: customerId, ...customerDoc.val() };\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting customer:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  //\r\n  // --- REPORTS ---\r\n  //\r\n\r\n  // Get all reports (using onValue for real-time updates)\r\n  const getReports = () => {\r\n    const reportRef = ref(db, \"messages\", \"reports\");\r\n    onValue(reportRef, (snapshot) => {\r\n      const reportsData = snapshot.val();\r\n      if (reportsData) {\r\n        setReports(\r\n          Object.entries(reportsData).map(([key, value]) => ({\r\n            id: key,\r\n            ...value,\r\n          }))\r\n        );\r\n      } else {\r\n        setReports([]);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Add a report to the messages\r\n  const addReport = async (reportData) => {\r\n    try {\r\n      const reportRef = ref(db, \"messages\", \"reports\");\r\n      const newReportId = push(reportRef).key; // Generate unique ID\r\n      reportData.dateAdded = Date.now(); // Add timestamp\r\n      await set(child(reportRef, newReportId), reportData);\r\n    } catch (error) {\r\n      console.error(\"Error adding report:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Delete a report\r\n  const deleteReport = async (reportId) => {\r\n    try {\r\n      const reportRef = ref(db, \"messages\", \"reports\", reportId);\r\n      await remove(reportRef);\r\n    } catch (error) {\r\n      console.error(\"Error deleting report:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Get report information\r\n  const getReportInfo = async (reportId) => {\r\n    try {\r\n      const reportRef = ref(db, \"messages\", \"reports\", reportId);\r\n      const docRef = await get(reportRef);\r\n      if (docRef.exists()) {\r\n        return { id: reportId, ...docRef.val() };\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting report information:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  //\r\n  // --- ENQUIRIES ---\r\n  //\r\n\r\n  // Get all enquiries (using onValue for real-time updates)\r\n  const getEnquiries = () => {\r\n    const enquiryRef = ref(db, \"messages\", \"enquiries\");\r\n    onValue(enquiryRef, (snapshot) => {\r\n      const enquiriesData = snapshot.val();\r\n      if (enquiriesData) {\r\n        setEnquiries(\r\n          Object.entries(enquiriesData).map(([key, value]) => ({\r\n            id: key,\r\n            ...value,\r\n          }))\r\n        );\r\n      } else {\r\n        setEnquiries([]);\r\n      }\r\n    });\r\n  };\r\n\r\n  // Add an enquiry to the messages\r\n  const addEnquiry = async (enquiryData) => {\r\n    try {\r\n      const enquiryRef = ref(db, \"messages\", \"enquiries\");\r\n      const newEnquiryId = push(enquiryRef).key; // Generate unique ID\r\n      enquiryData.dateAdded = Date.now(); // Add timestamp\r\n      await set(child(enquiryRef, newEnquiryId), enquiryData);\r\n    } catch (error) {\r\n      console.error(\"Error adding an enquiry:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Delete a enquiry\r\n  const deleteEnquiry = async (enquiryId) => {\r\n    try {\r\n      const enquiryRef = ref(db, \"messages\", \"enquiries\", enquiryId);\r\n      await remove(enquiryRef);\r\n    } catch (error) {\r\n      console.error(\"Error deleting enquiry:\", error);\r\n      throw error;\r\n    }\r\n  };\r\n\r\n  // Get enquiry information\r\n  const getEnquiryInfo = async (enquiryId) => {\r\n    try {\r\n      const enquiryRef = ref(db, \"messages\", \"enquiries\", enquiryId);\r\n      const docRef = await get(enquiryRef);\r\n      if (docRef.exists()) {\r\n        return { id: enquiryId, ...docRef.val() };\r\n      } else {\r\n        return null;\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error getting enquiry information:\", error);\r\n      return null;\r\n    }\r\n  };\r\n\r\n  //\r\n  // Fetch initial data on component mount\r\n  //\r\n  useEffect(() => {\r\n    getUsers();\r\n    getOrganizations();\r\n    getTickets();\r\n    getStaff();\r\n    getCustomers();\r\n    getReports();\r\n    getEnquiries();\r\n  }, []);\r\n\r\n  return {\r\n    db,\r\n    // Authenticating\r\n    user,\r\n    isLoading,\r\n    signOutUser,\r\n    getCurrentUser,\r\n    signUpUser,\r\n    signInUser,\r\n    resetPassword,\r\n    sendMailVerification,\r\n    // Users\r\n    getCurrentUserId,\r\n    users,\r\n    getUsers,\r\n    addUser,\r\n    getUserInfo,\r\n    updateUser,\r\n    deleteUser,\r\n    getUserRole,\r\n    // Organizations\r\n    organizations,\r\n    getOrganizations,\r\n    addOrganization,\r\n    getOrganizationInfo,\r\n    updateOrganization,\r\n    deleteOrganization,\r\n    getOrganizationByName,\r\n    getOrganizationIdByName,\r\n    // Tickets\r\n    tickets,\r\n    getTickets,\r\n    addTicket,\r\n    updateTicket,\r\n    deleteTicket,\r\n    getTicketInfo,\r\n    // Staff\r\n    staff,\r\n    getStaff,\r\n    addStaff,\r\n    updateStaff,\r\n    deleteStaff,\r\n    getStaffInfo,\r\n    // Customers\r\n    customers,\r\n    getCustomers,\r\n    addCustomer,\r\n    updateCustomer,\r\n    deleteCustomer,\r\n    getCustomerInfo,\r\n    // Reports\r\n    reports,\r\n    getReports,\r\n    getReportInfo,\r\n    addReport,\r\n    deleteReport,\r\n    // Enquiries\r\n    enquiries,\r\n    getEnquiries,\r\n    getEnquiryInfo,\r\n    addEnquiry,\r\n    deleteEnquiry,\r\n  };\r\n};\r\n\r\nexport { useFirebase };\r\n","import React, { createContext, useState, useEffect } from 'react';\r\nimport { useFirebase } from './UseFirebase';\r\n\r\nconst AuthContext = createContext();\r\n\r\nconst AuthProvider = ({ children }) => {\r\n  const [user, setUser] = useState(null);\r\n  const { signOut, getCurrentUser } = useFirebase();\r\n\r\n  useEffect(() => {\r\n    // Check if user data exists in localStorage\r\n    const storedUser = localStorage.getItem(\"user\");\r\n    if (storedUser) {\r\n      setUser(JSON.parse(storedUser));\r\n    }\r\n\r\n    const unsubscribe = getCurrentUser((user) => {\r\n      setUser(user);\r\n    });\r\n\r\n    return () => unsubscribe(); // Cleanup on component unmount\r\n  }, []);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ user, signOut, setUser }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport { AuthProvider, AuthContext }; \r\n","import React, { useState, useContext } from \"react\";\r\nimport { useFirebase } from \"../Auth/UseFirebase\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Auth/AuthProvider\";\r\n\r\nimport \"./ModalSignOut.css\";\r\n\r\nconst ModalSignOut = ({ show, onClose }) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n  const { setUser, signOut } = useContext(AuthContext);\r\n\r\n  const {\r\n    signOutUser\r\n  } = useFirebase();\r\n\r\n  // Sign out\r\n  const handleSignOut = async () => {\r\n    setLoading(true); // Set loading state to true\r\n    // Sign out the user\r\n    localStorage.removeItem(\"user\"); // Remove user data from localStorage\r\n    setUser(null); // Update the user state\r\n    try {\r\n      await signOutUser(); \r\n      console.log(\"User signed out successfully.\");\r\n    } catch (error) {\r\n      console.error(\"Error signing out:\", error);\r\n    } finally {\r\n      setLoading(false); // Reset loading state to false\r\n      onClose();\r\n      navigate(\"/signing\"); // Redirect to the signing page\r\n    }\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setLoading(false); // Reset loading state to false\r\n    onClose(); // Close the modal after sign-out is complete\r\n  };\r\n\r\n  if (!show) {\r\n    return null; // Don't render if not shown\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content-sign-out text-center\">\r\n        <span className=\"close\" onClick={handleClose}>\r\n          &times;\r\n        </span>\r\n\r\n        <h3 className=\"text-lowercase my-4\">\r\n          <span className=\"text-capitalize\">Do</span> you want to sign out?\r\n        </h3>\r\n\r\n        <div className=\"text-center\">\r\n          <button\r\n            className=\"btn-sign-out m-2\"\r\n            onClick={handleSignOut}\r\n            disabled={loading}\r\n          >\r\n            {loading ? \"Signing Out...\" : \"Sign Out\"}\r\n          </button>\r\n          <br />\r\n          <button className=\"btn-cancel m-2\" onClick={handleClose}>\r\n            Cancel\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ModalSignOut;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport \"./Header.css\";\r\nimport { Link, useLocation, useNavigate } from \"react-router-dom\";\r\nimport { useFormik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport ModalSignOut from \"../Modal/ModalSignOut\";\r\nimport { AuthContext } from \"../Auth/AuthProvider\";\r\n\r\nconst Header = () => {\r\n  const formik = useFormik({\r\n    initialValues: {\r\n      search: \"\",\r\n    },\r\n    validationSchema: yup.object({\r\n      search: yup\r\n        .string()\r\n        .trim()\r\n        .min(3, \"Search term must be at least 3 characters\")\r\n        .max(50, \"Search term must be less than 50 characters\"),\r\n    }),\r\n    onSubmit: (values) => {\r\n      // Handle search submission\r\n      console.log(\"Search:\", values.search);\r\n    },\r\n  });\r\n\r\n  const [showModal, setShowModal] = useState(false); // Showing the Modal\r\n  const location = useLocation();\r\n  const navigate = useNavigate(); // Get the navigate function\r\n  const { user } = useContext(AuthContext); // Get the user from the context\r\n  const [getLocation, setLocation] = useState(null); // Get the location\r\n\r\n  // Close the modal\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    console.log(\"Closed the Modal\");\r\n  };\r\n\r\n  // Click listener for the Pricing\r\n  const handleAccountSignOut = (event) => {\r\n    event.preventDefault();\r\n\r\n    setShowModal(true);\r\n    console.log(\"Account SignOut clicked\");\r\n  };\r\n\r\n  // Check if the current route is '/signing'\r\n  if (location.pathname !== \"/\" && user) {\r\n    return (\r\n      <>\r\n        <header className=\"header navbar navbar-expand-lg\">\r\n          <div className=\"container-fluid\">\r\n            {/* ClearVox Logo */}\r\n            <Link to=\"/\" className=\"navbar-brand\">\r\n              <img\r\n                src=\"./img/logo/clearvox_word.png\"\r\n                alt=\"ClearVox Logo\"\r\n                style={{ height: 40, width: \"auto\" }}\r\n              />\r\n            </Link>\r\n\r\n            {/* Navbar Toggler */}\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              data-bs-toggle=\"collapse\"\r\n              data-bs-target=\"#navbarSupportedContent\"\r\n              aria-controls=\"navbarSupportedContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n            >\r\n              <span className=\"toggle-navbar navbar-toggler-icon\"></span>\r\n            </button>\r\n\r\n            {/* NavBar List, Search functionality and Account Sign out */}\r\n            <div\r\n              className=\"collapse navbar-collapse\"\r\n              id=\"navbarSupportedContent\"\r\n            >\r\n              {/* Navbar List */}\r\n              <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 head-nav-list\">\r\n                <li className=\"nav-item\">\r\n                  <Link\r\n                    to=\"/signing\"\r\n                    className={`nav-link ${\r\n                      location.pathname === getLocation ? \"disabled\" : \"\"\r\n                    }`}\r\n                    aria-current=\"page\"\r\n                    style={{\r\n                      color:\r\n                        location.pathname === getLocation ? \"#1E3C70\" : \"white\",\r\n                    }}\r\n                  >\r\n                    Dashboard\r\n                  </Link>\r\n                </li>\r\n                <li className=\"nav-item\">\r\n                  <Link\r\n                    to=\"/complaint-form\"\r\n                    className={`nav-link ${\r\n                      location.pathname === \"/complaint-form\" ? \"disabled\" : \"\"\r\n                    }`}\r\n                    aria-current=\"page\"\r\n                    style={{\r\n                      color:\r\n                        location.pathname === \"/complaint-form\"\r\n                          ? \"#1E3C70\"\r\n                          : \"white\",\r\n                    }}\r\n                  >\r\n                    Form\r\n                  </Link>\r\n                </li>\r\n\r\n                {/* <li className=\"nav-item\">\r\n                  <Link\r\n                    to=\"/complaints\"\r\n                    className={`nav-link ${\r\n                      location.pathname === \"/complaints\" ? \"disabled\" : \"\"\r\n                    }`}\r\n                    aria-current=\"page\"\r\n                    style={{\r\n                      color:\r\n                        location.pathname === \"/complaints\"\r\n                          ? \"#1E3C70\"\r\n                          : \"white\",\r\n                    }}\r\n                  >\r\n                    Complaints\r\n                  </Link>\r\n                </li> */}\r\n\r\n                {/* \r\n                <li className=\"nav-item\">\r\n                  <Link\r\n                    to=\"/profile\"\r\n                    className={`nav-link ${\r\n                      location.pathname === \"/profile\" ? \"disabled\" : \"\"\r\n                    }`}\r\n                    aria-current=\"page\"\r\n                    style={{\r\n                      color:\r\n                        location.pathname === \"/profile\" ? \"#1E3C70\" : \"white\",\r\n                    }}\r\n                  >\r\n                    Profile\r\n                  </Link>\r\n                </li> */}\r\n              </ul>\r\n\r\n              {/* Complaint Search Field */}\r\n              <form\r\n                className={`d-flex d-none ${\r\n                  location.pathname !== \"/complaints\" ? \"d-none\" : \"\"\r\n                }`}\r\n                onSubmit={formik.handleSubmit}\r\n              >\r\n                <div className=\"input-group\">\r\n                  <input\r\n                    className=\" search-input form-control\"\r\n                    type=\"search\"\r\n                    placeholder=\"Search complaints...\"\r\n                    aria-label=\"Search\"\r\n                    name=\"search\"\r\n                    value={formik.values.search}\r\n                    onChange={formik.handleChange}\r\n                  />\r\n                  <button\r\n                    className=\"search-btn\"\r\n                    type=\"submit\"\r\n                    disabled={!formik.isValid}\r\n                  >\r\n                    <img\r\n                      src=\"./img/icons/search.svg\"\r\n                      alt=\"search\"\r\n                      style={{ height: 28, width: \"auto\" }}\r\n                    />\r\n                  </button>\r\n                </div>\r\n              </form>\r\n\r\n              {/* User Account to Sign out */}\r\n              <div className=\"ms-3 text-center\">\r\n                <img\r\n                  onClick={handleAccountSignOut}\r\n                  src=\"./img/icons/account.svg\"\r\n                  alt=\"account\"\r\n                  className=\"img-account\"\r\n                />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </header>\r\n\r\n        {/* Modal to Sign Out */}\r\n        <ModalSignOut show={showModal} onClose={closeModal}></ModalSignOut>\r\n      </>\r\n    );\r\n  }\r\n  if (location.pathname === \"/\") {\r\n    return <></>;\r\n  } else {\r\n    if (location.pathname !== \"/\") {\r\n      return (\r\n        <>\r\n          <header className=\"header navbar navbar-expand-lg\">\r\n            <div className=\"container-fluid\">\r\n              {/* ClearVox Logo */}\r\n              <Link to=\"/\" className=\"navbar-brand\">\r\n                <img\r\n                  src=\"./img/logo/clearvox_word.png\"\r\n                  alt=\"ClearVox Logo\"\r\n                  style={{ height: 40, width: \"auto\" }}\r\n                />\r\n              </Link>\r\n            </div>\r\n          </header>\r\n        </>\r\n      );\r\n    } else if (location.pathname !== \"*\") {\r\n      return (\r\n        <>\r\n          <header className=\"header navbar navbar-expand-lg\">\r\n            <div className=\"container-fluid\">\r\n              {/* ClearVox Logo */}\r\n              <Link to=\"/\" className=\"navbar-brand\">\r\n                <img\r\n                  src=\"./img/logo/clearvox_word.png\"\r\n                  alt=\"ClearVox Logo\"\r\n                  style={{ height: 40, width: \"auto\" }}\r\n                />\r\n              </Link>\r\n            </div>\r\n          </header>\r\n        </>\r\n      );\r\n    }\r\n  }\r\n};\r\n\r\nexport default Header;\r\n","// src/components/Modal/Modal.js\r\nimport React from 'react';\r\nimport './Modal.css';\r\n\r\n\r\nconst Modal = ({ show, onClose, children }) => {\r\n  if (!show) {\r\n    return null; // Don't render if not shown\r\n  }\r\n\r\n  return (\r\n    <div className=\"modal\">\r\n      <div className=\"modal-content\">\r\n        <span className=\"close\" onClick={onClose}>\r\n          &times;\r\n        </span>\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React, { useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\nimport \"./Footer.css\";\r\n\r\nconst Footer = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState(\"\");\r\n\r\n  // Click listener for the Developer\r\n  const handleDeveloperClick = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Meet the Developer is clicked\");\r\n    setModalContent(\r\n      <div className=\"text-center\">\r\n        <h2 className=\"text-capitalize dev-heading\">Gideon Agyage</h2>\r\n        <img\r\n          className=\"dev-image\"\r\n          src=\"./img/photos/developer.jpeg\"\r\n          alt=\"Developer\"\r\n        />\r\n        <p>\r\n          Hi There! I'm the developer behind Clearvox. My passion lies in\r\n          creating innovative solutions that address real-world challenges. With\r\n          a strong foundation in web development, I’ve crafted Clearvox to be\r\n          reliable, user-friendly, and scalable. Feel free to reach out—I’m\r\n          always eager to collaborate on exciting projects!\r\n        </p>\r\n      </div>\r\n    );\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Click listener for the Careers\r\n  const handleCareersClick = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Careers is clicked\");\r\n    setModalContent(\r\n      <div className=\"text-center\">\r\n        <h2>Careers</h2>\r\n        <p>\r\n          While Clearvox is thriving, we currently don’t have any open\r\n          positions. However, we’re constantly growing, so keep an eye out for\r\n          future opportunities. If you’re passionate about software development\r\n          and customer-centric solutions, stay tuned!\r\n        </p>\r\n      </div>\r\n    );\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Click listener for the Terms and Policies\r\n  const handleTermsClick = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Terms and Policies is clicked\");\r\n    setModalContent(\r\n      <div className=\"text-center\">\r\n        <h2>Terms & Policies</h2>\r\n        <p>\r\n          At Clearvox, we value your trust and privacy. Our Terms & Policies\r\n          outline how we collect, use, and protect your information. We strive\r\n          to provide a transparent and secure experience for all our users. By\r\n          using our website and service you agree to our Terms of Service and\r\n          Privacy Policy.\r\n        </p>\r\n      </div>\r\n    );\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Close the modal\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    console.log(\"Closed the Modal\");\r\n  };\r\n\r\n  return (\r\n    <footer className=\"footer\">\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {/* About Us */}\r\n          <div className=\"col-md-4 about-us\">\r\n            <h4 className=\"footer-title\">About Us</h4>\r\n            <p className=\"footer-title-line\" />\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <a href=\"#\" onClick={handleDeveloperClick}>\r\n                  Meet the Developer\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\" onClick={handleCareersClick}>\r\n                  Careers\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"#\" onClick={handleTermsClick}>\r\n                  Terms & Policies\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Contact Us */}\r\n          <div className=\"col-md-4 contact-us\">\r\n            <h4 className=\"footer-title\">Contact Me</h4>\r\n            <p className=\"footer-title-line\" />\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <a href=\"mailto:gideonagyage@gmail.com\">\r\n                  <img\r\n                    src=\"./img/icons/mail.svg\"\r\n                    className=\"media-icon\"\r\n                    alt=\"Mail Icon\"\r\n                  />{\" \"}\r\n                  Send an Email\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"tel:+1234567890\">\r\n                  <img\r\n                    src=\"./img/icons/phone.svg\"\r\n                    className=\"media-icon\"\r\n                    alt=\"Phone Icon\"\r\n                  />{\" \"}\r\n                  +1 (234) 567-890\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <Link to=\"/contact-me\">\r\n                  {\" \"}\r\n                  <img\r\n                    src=\"./img/icons/form.svg\"\r\n                    className=\"media-icon\"\r\n                    alt=\"Form Icon\"\r\n                  />{\" \"}\r\n                  Contact Form\r\n                </Link>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n\r\n          {/* Social Media */}\r\n          <div className=\"col-md-3\">\r\n            <h4 className=\"footer-title\">Social Media</h4>\r\n            <p className=\"footer-title-line\" />\r\n            <ul className=\"list-unstyled\">\r\n              <li>\r\n                <a href=\"https://www.facebook.com/gideonagyage\">\r\n                  <img\r\n                    src=\"./img/icons/facebook.svg\"\r\n                    className=\"media-icon\"\r\n                    alt=\"Facebook Icon\"\r\n                  />{\" \"}\r\n                  Facebook\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://linkedin.com/in/gideonagyage\">\r\n                  <img\r\n                    src=\"./img/icons/linkedin.svg\"\r\n                    className=\"media-icon\"\r\n                    alt=\"Linkedin Icon\"\r\n                  />{\" \"}\r\n                  LinkedIn\r\n                </a>\r\n              </li>\r\n              <li>\r\n                <a href=\"https://www.instagram.com/gideonagyage\">\r\n                  <img\r\n                    src=\"./img/icons/instagram.svg\"\r\n                    className=\"media-icon\"\r\n                    alt=\"Instagram Icon\"\r\n                  />{\" \"}\r\n                  Instagram\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Copyright ClearVox */}\r\n        <div className=\"row mt-3\">\r\n          <div className=\"col-md-12 text-center\">\r\n            <p className=\"text-muted\">\r\n              Copyright &copy; {new Date().getFullYear()} ClearVox.\r\n              <br /> All rights reserved.\r\n            </p>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Modal */}\r\n        <Modal show={showModal} onClose={closeModal}>\r\n          {modalContent}\r\n        </Modal>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React, { useState, useContext } from \"react\";\r\nimport \"./ComplaintForm.css\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport { AuthContext } from \"../Auth/AuthProvider\";\r\n\r\nconst ComplaintForm = () => {\r\n  const ComplaintFormSchema = Yup.object().shape({\r\n    fullName: Yup.string().required(\"Full name is required\"),\r\n    email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n    contactNumber: Yup.string().required(\"Contact number is required\"),\r\n    category: Yup.string().required(\"Please select a category\"),\r\n    description: Yup.string().required(\"Description is required\"),\r\n    preferredContactMethod: Yup.string().required(\r\n      \"Please select a preferred contact method\"\r\n    ),\r\n  });\r\n\r\n  const [showModal, setShowModal] = useState(false); // Showing the Modal\r\n  const [modalContent, setModalContent] = useState(\"\"); // The contents of the Modal\r\n\r\n  // Get the user from the context\r\n  const { user } = useContext(AuthContext);\r\n  const userEmail = user.email;\r\n\r\n  const history = useNavigate();\r\n\r\n  // Close the modal\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    console.log(\"Closed the Modal\");\r\n  };\r\n\r\n  const handleComplaintSubmit = (values, { resetForm }) => {\r\n    // Generate a unique ID for the complaint\r\n    const complaintId = Date.now().toString();\r\n\r\n    // Create the complaint object\r\n    const complaint = {\r\n      id: complaintId,\r\n      ...values,\r\n      status: \"Pending\", // Set initial status to \"Pending\"\r\n      dateCreated: new Date().toISOString(), // Get current date and time\r\n      createdBy: userEmail,\r\n    };\r\n\r\n    // Store the complaint in localStorage\r\n    const storedComplaints = localStorage.getItem(\"complaints\");\r\n    let complaints = [];\r\n    if (storedComplaints) {\r\n      complaints = JSON.parse(storedComplaints);\r\n    }\r\n    complaints.push(complaint);\r\n    localStorage.setItem(\"complaints\", JSON.stringify(complaints));\r\n\r\n    console.log(\"Complaint submitted:\", complaint); // Log the submitted complaint\r\n\r\n    // Redirect to success page\r\n    history.push(\"/success\");\r\n\r\n    // Show the modal for 3 seconds\r\n    setModalContent(\r\n      <div className=\"text-center my-3\">\r\n        <h1>Complaint Submitted successfully.</h1>\r\n      </div>\r\n    );\r\n    setShowModal(true);\r\n    setTimeout(() => {\r\n      setShowModal(false);\r\n      resetForm(); // Reset the form after 3 seconds\r\n    }, 3000); // Close the modal after 3 seconds\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-2 full-height\">\r\n      <div className=\"form-title\">\r\n        <h2 className=\"text-center form-title-text\">Complaint Form</h2>\r\n      </div>\r\n\r\n      <Formik\r\n        initialValues={{\r\n          fullName: \"\",\r\n          contactNumber: \"\",\r\n          category: \"\",\r\n          description: \"\",\r\n          preferredContactMethod: \"\",\r\n        }}\r\n        validationSchema={ComplaintFormSchema}\r\n        onSubmit={handleComplaintSubmit}\r\n      >\r\n        {({ isSubmitting, resetForm }) => (\r\n          // Form component from Formik to encapsulate form fields\r\n\r\n          <div className=\"row justify-content-center signing-form\">\r\n            <div className=\"col-md-7 col-lg-6\">\r\n              <div className=\"login-wrap p-0\">\r\n                <Form className=\"col-12 d-block m-0\">\r\n                  {/* Full name */}\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"fullName\">Full Name:</label>\r\n                    <Field\r\n                      name=\"fullName\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"fullName\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Contact Number */}\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"contactNumber\">Contact Number:</label>\r\n                    <Field\r\n                      name=\"contactNumber\"\r\n                      type=\"tel\"\r\n                      className=\"form-control\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"contactNumber\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Category */}\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"category\">Category:</label>\r\n                    <Field name=\"category\" as=\"select\" className=\"form-control\">\r\n                      <option value=\"\">Select category</option>\r\n                      <option value=\"Service\">Service</option>\r\n                      <option value=\"Product\">Product</option>\r\n                      <option value=\"Staff Conduct\">Staff Conduct</option>\r\n                    </Field>\r\n                    <ErrorMessage\r\n                      name=\"category\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Description with textarea */}\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Description:</label>\r\n                    <Field\r\n                      name=\"description\"\r\n                      as=\"textarea\"\r\n                      className=\"form-control\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"description\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Preferred Contact Method */}\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"preferredContactMethod\">\r\n                      Preferred Contact Method:\r\n                    </label>\r\n                    <Field\r\n                      name=\"preferredContactMethod\"\r\n                      as=\"select\"\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option value=\"\">Please select</option>\r\n                      <option value=\"Phone\">Phone</option>\r\n                      <option value=\"WhatsApp\">WhatsApp</option>\r\n                    </Field>\r\n                    <ErrorMessage\r\n                      name=\"preferredContactMethod\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Submit and Reset Buttons */}\r\n                  <div className=\"form-group mt-5 mb-5 text-end\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn-submit mx-4\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Submit\r\n                    </button>\r\n                    <button type=\"reset\" className=\"btn-reset\">\r\n                      Reset\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n\r\n      {/* Modal */}\r\n      <Modal show={showModal} onClose={closeModal}>\r\n        {modalContent}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplaintForm;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./Complaint.css\"\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nconst Complaint = () => {\r\n  const [complaints, setComplaints] = useState([]);\r\n  const [showEditModal, setShowEditModal] = useState(false);\r\n  const [selectedComplaint, setSelectedComplaint] = useState(null);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    // Fetch complaints from the backend API\r\n    const fetchComplaints = async () => {\r\n      try {\r\n        const response = await axios.get(\"/api/complaints\");\r\n        setComplaints(response.data);\r\n      } catch (error) {\r\n        console.error(error);\r\n      }\r\n    };\r\n\r\n    fetchComplaints();\r\n  }, []);\r\n\r\n  const handleViewComplaint = (complaintId) => {\r\n    navigate(`/complaints/${complaintId}`);\r\n  };\r\n\r\n  const handleEditComplaint = (complaint) => {\r\n    setSelectedComplaint(complaint);\r\n    setShowEditModal(true);\r\n  };\r\n\r\n  const handleDeleteComplaint = async (complaintId) => {\r\n    try {\r\n      await axios.delete(`/api/complaints/${complaintId}`);\r\n      setComplaints(complaints.filter((c) => c._id !== complaintId));\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  const validationSchema = yup.object({\r\n    fullName: yup.string().required(\"Full name is required\"),\r\n    email: yup.string().email(\"Invalid email format\").required(\"Email is required\"),\r\n    contactNumber: yup.string().required(\"Contact number is required\"),\r\n    category: yup.string().required(\"Category is required\"),\r\n    urgencyLevel: yup.string().required(\"Urgency level is required\"),\r\n    dateOfIncident: yup.date().required(\"Date of incident is required\"),\r\n  });\r\n\r\n  const handleEditSubmit = async (values) => {\r\n    try {\r\n      await axios.put(`/api/complaints/${selectedComplaint._id}`, values);\r\n      const updatedComplaints = complaints.map((c) =>\r\n        c._id === selectedComplaint._id ? values : c\r\n      );\r\n      setComplaints(updatedComplaints);\r\n      setShowEditModal(false);\r\n    } catch (error) {\r\n      console.error(error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-2 full-height\">\r\n      <div className=\"form-title\">\r\n        <h2 className=\"text-center form-title-text\">Complaints</h2>\r\n      </div>\r\n\r\n      {complaints.length === 0 ? (\r\n        <p className=\"text-center\">No complaints found.</p>\r\n      ) : (\r\n        <div className=\"table-responsive\">\r\n        <table className=\"table table-striped\">\r\n          <thead>\r\n            <tr>\r\n              <th>Full Name</th>\r\n              <th>Email</th>\r\n              <th>Contact Number</th>\r\n              <th>Category</th>\r\n              <th>Urgency Level</th>\r\n              <th>Date of Incident</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {complaints.map((complaint) => (\r\n              <tr key={complaint._id}>\r\n                <td>{complaint.fullName}</td>\r\n                <td>{complaint.email}</td>\r\n                <td>{complaint.contactNumber}</td>\r\n                <td>{complaint.category}</td>\r\n                <td>{complaint.urgencyLevel}</td>\r\n                <td>{complaint.dateOfIncident}</td>\r\n                <td>\r\n                  <button\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => handleViewComplaint(complaint._id)}\r\n                  >\r\n                    View\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-warning mx-2\"\r\n                    onClick={() => handleEditComplaint(complaint)}\r\n                  >\r\n                    Edit\r\n                  </button>\r\n                  <button\r\n                    className=\"btn btn-danger\"\r\n                    onClick={() => handleDeleteComplaint(complaint._id)}\r\n                  >\r\n                    Delete\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n        </div>\r\n      )}\r\n\r\n      {/* Edit Complaint Modal */}\r\n      <Modal show={showEditModal} onHide={() => setShowEditModal(false)}>\r\n        <Modal.Header closeButton>\r\n          <Modal.Title>Edit Complaint</Modal.Title>\r\n        </Modal.Header>\r\n        <Modal.Body>\r\n          <Formik\r\n            initialValues={selectedComplaint}\r\n            validationSchema={validationSchema}\r\n            onSubmit={handleEditSubmit}\r\n          >\r\n            {({ values, handleChange, handleBlur, errors, touched }) => (\r\n              <Form>\r\n                <div className=\"form-group\">\r\n                  <label htmlFor=\"fullName\">Full Name:</label>\r\n                  <Field\r\n                    type=\"text\"\r\n                    name=\"fullName\"\r\n                    value={values.fullName}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    className={`form-control ${\r\n                      touched.fullName && errors.fullName ? \"is-invalid\" : \"\"\r\n                    }`}\r\n                  />\r\n                  <ErrorMessage\r\n                    name=\"fullName\"\r\n                    component=\"div\"\r\n                    className=\"invalid-feedback\"\r\n                  />\r\n                </div>\r\n                {/* ... other form fields ... */}\r\n                <Button type=\"submit\" className=\"btn btn-primary\">\r\n                  Save Changes\r\n                </Button>\r\n              </Form>\r\n            )}\r\n          </Formik>\r\n        </Modal.Body>\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Complaint;\r\n","import React from \"react\";\r\nimport \"./Loading.css\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <>\r\n      <div className=\"loading-container\">\r\n        <div className=\"spinner-grow\" role=\"status\">\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import React from \"react\";\r\nimport \"./Error.css\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Error = () => {\r\n  return (\r\n    <div id=\"notfound\">\r\n      <div className=\"notfound\">\r\n        <div className=\"notfound-404\">\r\n          <h1>404</h1>\r\n        </div>\r\n        <h2>Oops! Page not found</h2>\r\n        <p>\r\n          The page you are looking is unavailable.\r\n          <br />\r\n          <Link to=\"/\">\r\n            <button type=\"button\" className=\"btn-home\">\r\n              Go Home\r\n            </button>\r\n          </Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Error;\r\n","import React, { useState, useEffect, useRef, useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\r\nimport { Carousel } from \"react-responsive-carousel\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport { AuthContext } from \"../Auth/AuthProvider\";\r\nimport { useFirebase } from '../Auth/UseFirebase';\r\n\r\nimport \"./Home.css\";\r\n\r\nconst Home = () => {\r\n  const navigate = useNavigate();\r\n  const scrollToTop = () => {\r\n    navigate(\"/signing\");\r\n    window.scrollTo(0, 0); // Scroll to the top\r\n    console.log(\"Scrolled to the Top View\");\r\n  };\r\n\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState(\"\");\r\n\r\n  // Refs for sections\r\n  const featuresRef = useRef(null);\r\n  const testimonialsRef = useRef(null);\r\n\r\n  // Scroll to the About Us\r\n  const scrollToAboutUs = () => {\r\n    const aboutUsSection = document.querySelector(\".about-us\");\r\n    aboutUsSection.scrollIntoView({ behavior: \"smooth\" });\r\n  };\r\n\r\n  // Scroll to the Features\r\n  const scrollToFeatures = () => {\r\n    featuresRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    console.log(\"Scrolled to the Features\");\r\n  };\r\n\r\n  // Scroll to the Testimonials\r\n  const scrollToTestimonials = () => {\r\n    testimonialsRef.current.scrollIntoView({ behavior: \"smooth\" });\r\n    console.log(\"Scrolled to the Testimonials\");\r\n  };\r\n\r\n  // Scroll to the Contact Us\r\n  const scrollToContactMe = () => {\r\n    const contactUsSection = document.querySelector(\".contact-us\");\r\n    contactUsSection.scrollIntoView({ behavior: \"smooth\" });\r\n    console.log(\"Scrolled to Contact Me\");\r\n  };\r\n\r\n  // Click listener for the Pricing\r\n  const handlePricingClick = (event) => {\r\n    event.preventDefault();\r\n\r\n    console.log(\"Categories for pricing is clicked\");\r\n\r\n    setModalContent(\r\n      <div className=\"text-center m-2\">\r\n        <h2>Pricing</h2>\r\n        <div className=\"pricing-container\">\r\n          {/* Table for Pricing */}\r\n          <table>\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  Basic\r\n                  <br />\r\n                  $29\r\n                </th>\r\n                <th>\r\n                  Standard\r\n                  <br />\r\n                  $59\r\n                </th>\r\n                <th>\r\n                  Premium\r\n                  <br />\r\n                  $99\r\n                </th>\r\n                <th>Features</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>Complaint Submission</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>Complaint Tracking</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>Complaint Categorization</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/close.svg\"\r\n                    alt=\"times\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>Complaint Assignment</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/close.svg\"\r\n                    alt=\"times\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>Communication Management</td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/close.svg\"\r\n                    alt=\"times\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/close.svg\"\r\n                    alt=\"times\"\r\n                  />\r\n                </td>\r\n                <td>\r\n                  <img\r\n                    className=\"media-icon\"\r\n                    src=\"./img/icons/done.svg\"\r\n                    alt=\"checked\"\r\n                  />\r\n                </td>\r\n                <td>Reporting and Analytics</td>\r\n              </tr>\r\n            </tbody>\r\n          </table>\r\n          {/* End of Table */}\r\n        </div>\r\n      </div>\r\n    );\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Close the modal\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    console.log(\"Closed the Modal\");\r\n  };\r\n\r\n  // Get the user from the context\r\n  const { user } = useContext(AuthContext);\r\n\r\n  // Call useFirebase outside the useEffect callback\r\n  const { getCurrentUser } = useFirebase();\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = getCurrentUser(); // Call getCurrentUser\r\n\r\n    // Cleanup the listener when the component unmounts\r\n    return () => unsubscribe(); \r\n  }, []);\r\n\r\n// Use the user object in your component's logic\r\nif (user) {\r\n  // User is logged in\r\n  console.log(\"User is logged in:\", user.email);\r\n} else {\r\n  // User is not logged in\r\n  console.log(\"User is not logged in\");\r\n}\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Header of the Home Page */}\r\n      <header className=\"home-header navbar navbar-expand-lg\">\r\n        <div className=\"container-fluid\">\r\n          {/* ClearVox Logo */}\r\n          <Link to=\"/\" className=\"navbar-brand\">\r\n            <img\r\n              src=\"./img/logo/clearvox_word.png\"\r\n              alt=\"ClearVox Logo\"\r\n              style={{ height: 40, width: \"auto\" }}\r\n            />\r\n          </Link>\r\n\r\n          {/* Navbar Toggler */}\r\n          <button\r\n            className=\"navbar-toggler\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target=\"#navbarSupportedContent\"\r\n            aria-controls=\"navbarSupportedContent\"\r\n            aria-expanded=\"false\"\r\n            aria-label=\"Toggle navigation\"\r\n          >\r\n            <span className=\"toggle-navbar navbar-toggler-icon\"></span>\r\n          </button>\r\n\r\n          <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n            {/* Navbar List */}\r\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0 nav-list\">\r\n              <li className=\"nav-item\">\r\n                <a\r\n                  onClick={scrollToAboutUs}\r\n                  className=\"nav-link\"\r\n                  aria-current=\"page\"\r\n                >\r\n                  About Us\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a onClick={scrollToFeatures} className=\"nav-link\">\r\n                  Features\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a href=\"#\" className=\"nav-link\" onClick={handlePricingClick}>\r\n                  Pricing\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a onClick={scrollToTestimonials} className=\"nav-link\">\r\n                  Testimonials\r\n                </a>\r\n              </li>\r\n              <li className=\"nav-item\">\r\n                <a onClick={scrollToContactMe} className=\"nav-link\">\r\n                  Contact Me\r\n                </a>\r\n              </li>\r\n            </ul>\r\n          </div>\r\n        </div>\r\n      </header>\r\n\r\n      {/* Background Waves */}\r\n      <div>\r\n        <div className=\"wave\"></div>\r\n        <div className=\"wave\"></div>\r\n        <div className=\"wave-2\"></div>\r\n        <div className=\"wave-2\"></div>\r\n      </div>\r\n\r\n      {/* All other contents on the main page */}\r\n      <div>\r\n        {/* Heading of the Home Page */}\r\n        <div className=\"main-content\">\r\n          <br /> <br /> <br />\r\n          <span>Streamline Your Complaint Management</span>\r\n          <br />\r\n          <p>\r\n            ClearVox is your all-in-one solution for efficient complaint\r\n            management.\r\n            <br />\r\n            Track, resolve, and analyze complaints with ease.\r\n          </p>\r\n          {/* To Dashboard if user is signed in, else to the sign up and sign in page */}\r\n          <p>\r\n            <Link to=\"/signing\">\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-register text-capitalize\"\r\n                onClick={scrollToTop}\r\n              >\r\n                {/* Conditional button text */}\r\n                {user ? \"My Dashboard\" : \"Get Started\"}\r\n              </button>\r\n            </Link>\r\n          </p>\r\n          {/* Home's main content */}\r\n          <div className=\"misc\">\r\n            <br /> <br />\r\n            {/* Features and Testimonials */}\r\n            <div>\r\n              {/* Features */}\r\n              <h2 ref={featuresRef} className=\"m-6 text-center\">\r\n                FEATURES\r\n              </h2>\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-md-5 col-12 text-center card\">\r\n                  <img\r\n                    src=\"./img/illus/comp_submission.svg\"\r\n                    alt=\"Complaint Submission\"\r\n                    className=\"feature-image\"\r\n                  />\r\n                  <p className=\"feature text-start\">\r\n                    <strong>Complaint Submission</strong> <br />\r\n                    Users can easily submit complaints through a user-friendly\r\n                    interface.\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-5 col-12 text-center card\">\r\n                  <img\r\n                    src=\"./img/illus/comp_tracking.svg\"\r\n                    alt=\"Complaint Tracking\"\r\n                    className=\"feature-image\"\r\n                  />\r\n                  <p className=\"feature text-end\">\r\n                    <strong>Complaint Tracking</strong> <br />\r\n                    Track the status of complaints in real-time, from submission\r\n                    to resolution.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-md-5 col-12 text-center card\">\r\n                  <img\r\n                    src=\"./img/illus/comp_categorization.svg\"\r\n                    alt=\"Complaint Categorization\"\r\n                    className=\"feature-image\"\r\n                  />\r\n                  <p className=\"feature text-start\">\r\n                    <strong>Complaint Categorization</strong> <br />\r\n                    Organize complaints by category for better analysis and\r\n                    reporting.\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-5 col-12 text-center card\">\r\n                  <img\r\n                    src=\"./img/illus/comp_assignment.svg\"\r\n                    alt=\"Complaint Assignment\"\r\n                    className=\"feature-image\"\r\n                  />\r\n                  <p className=\"feature text-end\">\r\n                    <strong>Complaint Assignment</strong> <br />\r\n                    Assign complaints to specific agents or teams for efficient\r\n                    handling.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n              <div className=\"row text-center\">\r\n                <div className=\"col-md-5 col-12 text-center card\">\r\n                  <img\r\n                    src=\"./img/illus/comp_management.svg\"\r\n                    alt=\"Communication Management\"\r\n                    className=\"feature-image\"\r\n                  />\r\n                  <p className=\"feature text-start\">\r\n                    <strong>Communication Management</strong> <br />\r\n                    Communicate with customers throughout the complaint\r\n                    resolution process.\r\n                  </p>\r\n                </div>\r\n                <div className=\"col-md-5 col-12 text-center card\">\r\n                  <img\r\n                    src=\"./img/illus/comp_analytics.svg\"\r\n                    alt=\"Reporting and Analytics\"\r\n                    className=\"feature-image\"\r\n                  />\r\n                  <p className=\"feature text-end\">\r\n                    <strong>Reporting and Analytics</strong> <br />\r\n                    Generate reports and insights on complaint trends and\r\n                    performance.\r\n                  </p>\r\n                </div>\r\n              </div>\r\n\r\n              <br /> <br />\r\n\r\n              {/* Testimonials */}\r\n              <div>\r\n                <h2 ref={testimonialsRef} className=\"m-6 text-center\">\r\n                  Testimonials\r\n                </h2>\r\n                <Carousel autoPlay infiniteLoop showThumbs={false}>\r\n                  {/* 1st Carousel */}\r\n                  <div className=\"myCarousel\">\r\n                    <div className=\"img-box\">\r\n                      <img\r\n                        src=\"./img/photos/man_1.jpg\"\r\n                        alt=\"Nicholas Amankwah\"\r\n                      />\r\n                    </div>\r\n                    <p className=\"testimonial\">\r\n                      \"ClearVox has been a game-changer for our customer service\r\n                      team. It's streamlined our complaint management process,\r\n                      making it easier to track, resolve, and analyze\r\n                      complaints. We've seen a significant improvement in our\r\n                      customer satisfaction since implementing ClearVox.\"\r\n                    </p>\r\n                    <p className=\"overview\">\r\n                      <b>Nicholas Amankwah</b>, Customer Service Manager, Alpha\r\n                      House Corporation\r\n                    </p>\r\n                  </div>\r\n                  {/* 2nd Carousel */}\r\n                  <div className=\"myCarousel\">\r\n                    <div className=\"img-box\">\r\n                      <img src=\"./img/photos/man_2.jpg\" alt=\"Samuel Osei\" />\r\n                    </div>\r\n                    <p className=\"testimonial\">\r\n                      \"I used to dread dealing with customer complaints, but\r\n                      ClearVox has made it so much easier. The intuitive\r\n                      interface and powerful features have helped us resolve\r\n                      complaints quickly and efficiently. I highly recommend\r\n                      ClearVox to any business looking to improve their\r\n                      complaint management process.\"\r\n                    </p>\r\n                    <p className=\"overview\">\r\n                      <b>Emmanuel Osei</b>, Operations Manager, Syrus\r\n                      Technologies Inc\r\n                    </p>\r\n                  </div>\r\n                  {/* 3rd Carousel */}\r\n                  <div className=\"myCarousel\">\r\n                    <div className=\"img-box\">\r\n                      <img src=\"./img/photos/lady_1.jpg\" alt=\"Sarah Akoto\" />\r\n                    </div>\r\n                    <p className=\"testimonial\">\r\n                      \"ClearVox has given us valuable insights into our customer\r\n                      complaints. The reporting and analytics features have\r\n                      helped us identify trends and areas for improvement. We're\r\n                      now able to proactively address customer concerns and\r\n                      prevent future issues.\"\r\n                    </p>\r\n                    <p className=\"overview\">\r\n                      <b>Roberta Mensah</b>, Marketing Director, Hopper Finance\r\n                      Inc.\r\n                    </p>\r\n                  </div>\r\n                  {/* 4th Carousel */}\r\n                  <div className=\"myCarousel\">\r\n                    <div className=\"img-box\">\r\n                      <img src=\"./img/photos/lady_2.jpg\" alt=\"Deborah Aryee\" />\r\n                    </div>\r\n                    <p className=\"testimonial\">\r\n                      \"ClearVox has been a lifesaver for our small business.\r\n                      It's affordable, easy to use, and has helped us improve\r\n                      our customer service significantly. We're now able to\r\n                      handle complaints efficiently and keep our customers\r\n                      happy.\"\r\n                    </p>\r\n                    <p className=\"overview\">\r\n                      <b>Jessica Aryee</b>, Owner, Debar Micro Finance Ltd\r\n                    </p>\r\n                  </div>\r\n                </Carousel>\r\n              </div>\r\n              {/* To Dashboard if user is signed in, else to the sign up and sign in page */}\r\n              <p className=\"text-center\">\r\n                <Link to=\"/signing\">\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn-register text-capitalize\"\r\n                    onClick={scrollToTop}\r\n                  >\r\n                    {/* Conditional button text */}\r\n                    {user ? \"My Dashboard\" : \"Get Started\"}\r\n                  </button>\r\n                </Link>\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        {/* Modal */}\r\n        <Modal show={showModal} onClose={closeModal}>\r\n          {modalContent}\r\n        </Modal>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport Modal from \"../Modal/Modal\";\r\nimport { useFirebase } from \"../Auth/UseFirebase\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { AuthContext } from \"../Auth/AuthProvider\";\r\n\r\nimport \"./Signing.css\";\r\n\r\nconst Signing = () => {\r\n  \r\n  const {\r\n    signUpUser,\r\n    signInUser,\r\n    resetPassword,\r\n    getCurrentUser,\r\n    addStaff,\r\n    addOrganization,\r\n    addUser,\r\n    getUserRole,\r\n  } = useFirebase(); // Get functions from useFirebase\r\n\r\n  const [showSignIn, setShowSignIn] = useState(true); // Initially show sign in\r\n  const [isLoading, setIsLoading] = useState(false); // Loading state\r\n\r\n  const [showModal, setShowModal] = useState(false); // Showing the Modal\r\n  const [modalContent, setModalContent] = useState(\"\"); // The contents of the Modal\r\n\r\n  const navigate = useNavigate();\r\n  const { user, setUser } = useContext(AuthContext);\r\n  const location = useLocation(); // Get the current location\r\n\r\n  useEffect(() => {\r\n    // Check if the user is logged in and the current path is \"/signing\"\r\n    if (user && location.pathname === \"/signing\") {\r\n\r\n      if (user.email === \"gideonagyage@gmail.com\"){\r\n        navigate(\"/db-super-admin\")\r\n      }\r\n      else if (user.email === \"gideon.agyage@genstudents.org\"){\r\n        navigate(\"/db-admin\")\r\n      }\r\n      else if (user.email === \"Atok948@gmail.com\"){\r\n        navigate(\"/db-staff\")\r\n      }\r\n      else {\r\n        navigate(\"/db-customer\")\r\n      }\r\n    }\r\n  }, [user, location.pathname]);\r\n\r\n  // Click listener for forgot password\r\n  const handleForgotPasswordClick = (event) => {\r\n    event.preventDefault();\r\n    console.log(\"Forgot Password clicked\");\r\n    setModalContent(\r\n      <div className=\"text-center\">\r\n        <h3 className=\"text-capitalize m-4\">Forgot Password?</h3>\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={forgotPasswordValidationSchema}\r\n          onSubmit={handleReset}\r\n        >\r\n          {({ isResetting }) => (\r\n            <div className=\"justify-content-center text-center signing-form\">\r\n              <div className=\"w-100\">\r\n                <Form>\r\n                  <div className=\"form-group\">\r\n                    <Field\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      placeholder=\"Email\"\r\n                      name=\"email\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"email\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  <div className=\"text-center\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn mt-2\"\r\n                      disabled={isResetting || isLoading}\r\n                    >\r\n                      {isLoading ? \"Sending Link...\" : \"Reset\"}\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      </div>\r\n    );\r\n    setShowModal(true);\r\n  };\r\n\r\n  // Close the modal\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    console.log(\"Closed the Modal\");\r\n  };\r\n\r\n  const handleShowSignUp = () => {\r\n    setShowSignIn(false);\r\n    console.log(\"To Sign Up link clicked\");\r\n  };\r\n\r\n  const handleShowSignIn = () => {\r\n    setShowSignIn(true);\r\n    console.log(\"To Sign In link clicked\");\r\n  };\r\n\r\n  const initialValues = {\r\n    email: \"\",\r\n    name: \"\",\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n    subscriptionTier: \"basic\",\r\n  };\r\n\r\n  // Validating Sign In\r\n  const signInValidationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Invalid email address\")\r\n      .required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .min(8, \"Password must be at least 8 characters\")\r\n      .required(\"Password is required\"),\r\n  });\r\n\r\n  // Validating Sign Up\r\n  const signUpValidationSchema = Yup.object().shape({\r\n    name: Yup.string().required(\"Name is required\"),\r\n    email: Yup.string()\r\n      .email(\"Invalid email address\")\r\n      .required(\"Email is required\"),\r\n    password: Yup.string()\r\n      .min(8, \"Password must be at least 8 characters\")\r\n      .required(\"Password is required\"),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref(\"password\"), null], \"Passwords must match\")\r\n      .required(\"Confirm password is required\"),\r\n    subscriptionTier: Yup.string().required(\"Subscription tier is required\"),\r\n  });\r\n\r\n  // Validating Email for Forgot Password\r\n  const forgotPasswordValidationSchema = Yup.object().shape({\r\n    email: Yup.string()\r\n      .email(\"Invalid email address\")\r\n      .required(\"Email is required\"),\r\n  });\r\n\r\n  useEffect(() => {\r\n    const unsubscribe = getCurrentUser(); // Call getCurrentUser\r\n\r\n    // Cleanup the listener when the component unmounts\r\n    return () => unsubscribe();\r\n  }, []);\r\n\r\n  // Signing in or Signing Up\r\n  const handleSubmit = async (values, { setSubmitting }) => {\r\n    setIsLoading(true); // Set loading state\r\n\r\n    try {\r\n      if (showSignIn) {\r\n        // Sign In\r\n        try {\r\n          // Sign In\r\n          const userCredential = await signInUser(\r\n            values.email,\r\n            values.password\r\n          );\r\n          const user = userCredential.user;\r\n\r\n          // Wait for getUserRole to complete\r\n          const userRole = await getUserRole(user.uid);\r\n\r\n          console.log(\"User's Unique id: \", user.uid);\r\n          console.log(\"\\nGetting a user's Role:\\n\", userRole);\r\n\r\n          // Create the user data object\r\n          const userData = {\r\n            uid: user.uid,\r\n            email: user.email,\r\n            name: user.name,\r\n            role: userRole,\r\n          };\r\n\r\n          // Store the user data in localStorage\r\n          localStorage.setItem(\"user\", JSON.stringify(userData));\r\n\r\n          // Update AuthContext with the signed-in user and role\r\n          setUser({ ...user, role: userRole }); // Set the user and role in the AuthContext\r\n\r\n          // Redirect to the dashboard\r\n          if (user.email === \"gideonagyage@gmail.com\"){\r\n            navigate(\"/db-super-admin\")\r\n          }\r\n          else if (user.email === \"gideon.agyage@genstudents.org\"){\r\n            navigate(\"/db-admin\")\r\n          }\r\n          else if (user.email === \"Atok948@gmail.com\"){\r\n            navigate(\"/db-staff\")\r\n          }\r\n          else {\r\n            navigate(\"/db-customer\")\r\n          }\r\n\r\n          // handle successful sign-in\r\n          console.log(\"Sign in successful with:\", values.email);\r\n\r\n          // Show the modal for 3 seconds\r\n          setModalContent(\r\n            <div className=\"text-center my-3\">\r\n              <h1>Sign In successful.</h1>\r\n            </div>\r\n          );\r\n          setShowModal(true);\r\n          setTimeout(() => {\r\n            setShowModal(false);\r\n          }, 3000); // Close the modal after 3 seconds\r\n        } catch (error) {\r\n          // Handle errors\r\n          console.error(\"Error signing in:\", error);\r\n\r\n          // Show the modal for 3 seconds\r\n          setModalContent(\r\n            <div className=\"text-center mt-3 gap-2\">\r\n              <h1>\r\n                Sign In failed.\r\n                <br />\r\n                Please Sign Up if you're new.\r\n              </h1>\r\n            </div>\r\n          );\r\n          setShowModal(true);\r\n          setTimeout(() => {\r\n            setShowModal(false);\r\n          }, 3000); // Close the modal after 3 seconds\r\n        }\r\n      } else {\r\n        // Sign Up\r\n        try {\r\n          const result = await signUpUser(values.email, values.password);\r\n\r\n          // Check if there's an error\r\n          if (result.error) {\r\n            console.error(\"Sign up error:\", result.error);\r\n            setModalContent(\r\n              <div className=\"text-center text-capitalize my-3\">\r\n                <p>{result.error.message}</p>\r\n              </div>\r\n            );\r\n            setShowModal(true);\r\n          } else {\r\n            // Sign up successful\r\n            await Promise.all([\r\n              addUser({\r\n                name: values.name,\r\n                email: values.email,\r\n                role: \"admin\",\r\n              }),\r\n              addOrganization({\r\n                orgPlan: values.subscriptionTier,\r\n                orgStatus: \"active\",\r\n              }),\r\n              addStaff({\r\n                name: values.name,\r\n                email: values.email,\r\n                role: \"admin\",\r\n                notifications: {},\r\n                todo_list: {},\r\n              }),\r\n            ]);\r\n\r\n            // Show the modal for 3 seconds\r\n            setModalContent(\r\n              <div className=\"text-center my-3\">\r\n                <h1>\r\n                  Sign up successful.\r\n                  <br />\r\n                  Please sign in now.\r\n                </h1>\r\n              </div>\r\n            );\r\n            setShowModal(true);\r\n            setTimeout(() => {\r\n              setShowModal(false);\r\n            }, 3000); // Close the modal after 3 seconds\r\n\r\n            setShowSignIn(true); // Switch to sign in after successful sign up\r\n\r\n            console.log(\"Sign up successful with:\", values.email);\r\n          }\r\n        } catch (error) {\r\n          // Handle errors\r\n          if (error.code === \"auth/email-already-in-use\") {\r\n            // Handle the specific error\r\n            console.error(\"Email already in use:\", error);\r\n            setModalContent(\r\n              <div className=\"text-center my-3\">\r\n                <h1>\r\n                  This email is already associated with an account.\r\n                  <br />\r\n                  Please try a different email or sign in.\r\n                </h1>\r\n              </div>\r\n            );\r\n            setShowModal(true);\r\n          } else {\r\n            // Handle errors during addUser, addOrganization, or addStaffToOrg\r\n            console.error(\"Error adding user, organization, or staff:\", error);\r\n\r\n            setModalContent(\r\n              <div className=\"text-center my-3\">\r\n                <p>An error occurred during sign up, please try again later.</p>\r\n              </div>\r\n            );\r\n            setShowModal(true);\r\n          }\r\n        }\r\n      }\r\n    } catch (error) {\r\n      // Handle errors\r\n      if (error.code === \"auth/email-already-in-use\") {\r\n        // Handle the specific error\r\n        console.error(\"Email already in use:\", error);\r\n        setModalContent(\r\n          <div className=\"text-center my-3\">\r\n            <p>\r\n              This email is already associated with an account. Please try a\r\n              different email or sign in.\r\n            </p>\r\n          </div>\r\n        );\r\n        setShowModal(true);\r\n      } else {\r\n        // Handle other errors\r\n        console.error(\"Error during sign-up/sign-in:\", error);\r\n        setModalContent(\r\n          <div className=\"text-center my-3\">\r\n            <p>\r\n              An error occurred during sign up/sign in, please try again later.\r\n            </p>\r\n          </div>\r\n        );\r\n        setShowModal(true);\r\n      }\r\n    } finally {\r\n      setIsLoading(false); // Reset loading state\r\n      setSubmitting(false);\r\n    }\r\n  };\r\n\r\n  // Resetting Password\r\n  const handleReset = async (values, { setResetting }) => {\r\n    setIsLoading(true); // Set loading state\r\n\r\n    try {\r\n      await resetPassword(values.email);\r\n\r\n      // Show the modal for 3 seconds\r\n      setModalContent(\r\n        <div className=\"text-center my-3\">\r\n          <h1 className=\"text-capitalize\">\r\n            Reset link sent to\r\n            <br />\r\n            <span className=\"text-lowercase\">{values.email}</span>\r\n          </h1>\r\n        </div>\r\n      );\r\n      setShowModal(true);\r\n      setTimeout(() => {\r\n        setShowModal(false);\r\n      }, 3000); // Close the modal after 3 seconds\r\n\r\n      console.log(\"Password reset link sent to:\", values.email);\r\n    } catch (error) {\r\n      // Handle errors\r\n      // Show the modal for 3 seconds\r\n      setModalContent(\r\n        <div className=\"text-center my-3\">\r\n          <h1 className=\"text-capitalize\">\r\n            Error sending link to\r\n            <br />\r\n            <span className=\"text-lowercase\">{values.email}</span>\r\n          </h1>\r\n        </div>\r\n      );\r\n      setShowModal(true);\r\n      setTimeout(() => {\r\n        setShowModal(false);\r\n      }, 3000); // Close the modal after 3 seconds\r\n\r\n      console.error(\"Error sending reset link to email:\", error);\r\n    } finally {\r\n      setIsLoading(false); // Reset loading state\r\n      setResetting(false);\r\n    }\r\n  };\r\n\r\n  // Scroll to the top when the component mounts\r\n  useEffect(() => {\r\n    console.log(\"Component mounted, scrollling to top\");\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Signing\">\r\n      {/* Sign In */}\r\n      {showSignIn && (\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={\r\n            showSignIn ? signInValidationSchema : signUpValidationSchema\r\n          }\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <div className=\"container\">\r\n              <h1 className=\"text-center\">Sign In</h1>\r\n              <div className=\"row justify-content-center signing-form\">\r\n                <div className=\"col-md-6 col-lg-4\">\r\n                  <div className=\"login-wrap p-0\">\r\n                    <Form>\r\n                      <div className=\"form-group\">\r\n                        <Field\r\n                          type=\"email\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Email\"\r\n                          name=\"email\"\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"email\"\r\n                          component=\"div\"\r\n                          className=\"text-danger\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <Field\r\n                          id=\"password-field\"\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Password\"\r\n                          name=\"password\"\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"password\"\r\n                          component=\"div\"\r\n                          className=\"text-danger\"\r\n                        />\r\n                        <span\r\n                          toggle=\"#password-field\"\r\n                          className=\"toggle-password\"\r\n                        />\r\n                      </div>\r\n\r\n                      <div className=\"form-group text-center\">\r\n                        <div className=\"m-3\">\r\n                          <a href=\"#\" onClick={handleForgotPasswordClick}>\r\n                            Forgot Password?\r\n                          </a>\r\n                        </div>\r\n\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"form-control btn submit px-3\"\r\n                          disabled={isSubmitting || isLoading}\r\n                        >\r\n                          {isLoading ? \"Signing In...\" : \"Sign In\"}\r\n                        </button>\r\n                      </div>\r\n                    </Form>\r\n                    <br />\r\n                    <div className=\"m-3 text-center\">\r\n                      Don&rsquo;t have an account?{\" \"}\r\n                      <a href=\"#\" onClick={handleShowSignUp}>\r\n                        Sign Up\r\n                      </a>\r\n                    </div>\r\n                    <br /> <br />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      )}\r\n\r\n      {/* Sign Up */}\r\n      {!showSignIn && (\r\n        <Formik\r\n          initialValues={initialValues}\r\n          validationSchema={\r\n            showSignIn ? signInValidationSchema : signUpValidationSchema\r\n          }\r\n          onSubmit={handleSubmit}\r\n        >\r\n          {({ isSubmitting }) => (\r\n            <div className=\"container\">\r\n              <h1 className=\"text-center\">Sign Up</h1>\r\n              <div className=\"row justify-content-center signing-form\">\r\n                <div className=\"col-md-6 col-lg-4\">\r\n                  <div className=\"login-wrap p-0\">\r\n                    <Form>\r\n                      <div className=\"form-group\">\r\n                        <Field\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Name\"\r\n                          name=\"name\"\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"name\"\r\n                          component=\"div\"\r\n                          className=\"text-danger\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <Field\r\n                          type=\"email\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Email\"\r\n                          name=\"email\"\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"email\"\r\n                          component=\"div\"\r\n                          className=\"text-danger\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <Field\r\n                          id=\"password-field\"\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Password\"\r\n                          name=\"password\"\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"password\"\r\n                          component=\"div\"\r\n                          className=\"text-danger\"\r\n                        />\r\n                        <span\r\n                          toggle=\"#password-field\"\r\n                          className=\"toggle-password\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <Field\r\n                          id=\"confirm-password-field\"\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          placeholder=\"Confirm Password\"\r\n                          name=\"confirmPassword\"\r\n                        />\r\n                        <ErrorMessage\r\n                          name=\"confirmPassword\"\r\n                          component=\"div\"\r\n                          className=\"text-danger\"\r\n                        />\r\n                        <span\r\n                          toggle=\"#password-field\"\r\n                          className=\"toggle-password\"\r\n                        />\r\n                      </div>\r\n                      <div className=\"form-group\">\r\n                        <label>Subscription Tier</label>\r\n                        <Field\r\n                          as=\"select\"\r\n                          className=\"form-control\"\r\n                          name=\"subscriptionTier\"\r\n                        >\r\n                          <option value=\"basic\">Basic</option>\r\n                          <option value=\"standard\">Standard</option>\r\n                          <option value=\"premium\">Premium</option>\r\n                        </Field>\r\n                        <ErrorMessage\r\n                          name=\"subscriptionTier\"\r\n                          component=\"div\"\r\n                          className=\"text-danger\"\r\n                        />\r\n                      </div>\r\n                      <br />\r\n                      <div className=\"form-group text-center\">\r\n                        <button\r\n                          type=\"submit\"\r\n                          className=\"form-control btn submit px-3\"\r\n                          disabled={isSubmitting || isLoading}\r\n                        >\r\n                          {isLoading ? \"Signing Up...\" : \"Sign Up\"}\r\n                        </button>\r\n                      </div>\r\n                    </Form>\r\n                    <div className=\"text-center\">\r\n                      <br />\r\n                      <div className=\"m-3 text-center\">\r\n                        Already have an account?{\" \"}\r\n                        <a href=\"#\" onClick={handleShowSignIn}>\r\n                          Sign In\r\n                        </a>\r\n                      </div>\r\n                      <br /> <br />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )}\r\n        </Formik>\r\n      )}\r\n\r\n      {/* Modal */}\r\n      <Modal show={showModal} onClose={closeModal}>\r\n        {modalContent}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Signing;\r\n","import React from \"react\";\r\nimport \"./Profile.css\"\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div className=\"container rounded bg-white mt-5 mb-5\">\r\n      <div className=\"row\">\r\n        <div className=\"col-md-5 border-right\">\r\n          <div className=\"d-flex flex-column align-items-center text-center p-3 py-5\">\r\n            <img\r\n              className=\"rounded-circle mt-5\"\r\n              width=\"150px\"\r\n              src=\"./img/illus/avatar_female.svg\" alt=\"Avatar\"\r\n            />\r\n            <span className=\"font-weight-bold\">Edogaru</span>\r\n            <span className=\"text-black-50\">edogaru@mail.com.my</span>\r\n            <span> </span>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-md-7 border-right\">\r\n          <div className=\"p-2 py-2\">\r\n            <div className=\"d-flex justify-content-between align-items-center mb-3\">\r\n              <h4 className=\"text-right\">Profile</h4>\r\n            </div>\r\n            <div className=\"row mt-2\">\r\n              <div className=\"col-md-6\">\r\n                <label className=\"labels\">Name</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"first name\"\r\n                  value=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"labels\">Surname</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value=\"\"\r\n                  placeholder=\"surname\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n              <div className=\"col-md-12\">\r\n                <label className=\"labels\">Mobile Number</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"enter phone number\"\r\n                  value\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <label className=\"labels\">Address Line 1</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"enter address line 1\"\r\n                  value=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <label className=\"labels\">Address Line 2</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"enter address line 2\"\r\n                  value=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <label className=\"labels\">Postcode</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"enter address line 2\"\r\n                  value=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <label className=\"labels\">State</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"enter address line 2\"\r\n                  value=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <label className=\"labels\">Area</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"enter address line 2\"\r\n                  value=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <label className=\"labels\">Email ID</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"enter email id\"\r\n                  value=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-12\">\r\n                <label className=\"labels\">Education</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"education\"\r\n                  value=\"\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"row mt-3\">\r\n              <div className=\"col-md-6\">\r\n                <label className=\"labels\">Country</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"country\"\r\n                  value=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"col-md-6\">\r\n                <label className=\"labels\">State/Region</label>\r\n                <input\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  value=\"\"\r\n                  placeholder=\"state\"\r\n                />\r\n              </div>\r\n            </div>\r\n            <div className=\"m-4 text-center\">\r\n              <button className=\"btn profile-button\" type=\"button\">\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React, {useEffect} from \"react\";\r\nimport \"./ContactMe.css\";\r\n\r\nconst ContactMe = () => {\r\n\r\n   // Scroll to the top when the component mounts\r\n   useEffect(() => {\r\n    console.log(\"Component mounted, scrollling to top\");\r\n    window.scrollTo(0, 0);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container full-height\">\r\n      <br />\r\n      <h1 className=\"text-center\">Get In Touch</h1>\r\n      <div className=\"row justify-content-center\">\r\n        <div className=\"col-md-6 col-lg-4\">\r\n          <div className=\"login-wrap p-0\">\r\n            <form action=\"#\" className=\"signin-form text-center\">\r\n              <div className=\"form-group\">\r\n                <input\r\n                  type=\"name\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Name\"\r\n                  required=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  id=\"email\"\r\n                  type=\"email\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Email\"\r\n                  required=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <input\r\n                  id=\"subject\"\r\n                  type=\"text\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Subject\"\r\n                  required=\"\"\r\n                />\r\n              </div>\r\n              <div className=\"form-group\">\r\n                <textarea\r\n                  id=\"message\"\r\n                  type=\"text-area\"\r\n                  className=\"form-control\"\r\n                  placeholder=\"Message\"\r\n                  required=\"\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <button type=\"submit\" className=\"btn\">\r\n                  Send Email\r\n                </button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n          <br /> <br />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\n// Exporting the component for use in other parts of the application\r\nexport default ContactMe;\r\n","import React, { useContext } from 'react';\r\nimport { Navigate, Outlet } from 'react-router-dom';\r\nimport { AuthContext } from './AuthProvider';\r\n\r\nconst PrivateRoute = () => {\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (!user) {\r\n    // Redirect to the signing page if not logged in\r\n    return <Navigate to=\"/signing\" replace />; \r\n  }\r\n\r\n  // Render the child component if logged in\r\n  return <Outlet />; \r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React, { useContext } from \"react\";\r\nimport \"./ComplaintCard.css\";\r\nimport { AuthContext } from \"../Auth/AuthProvider\";\r\nimport { useLocation } from 'react-router-dom'; // Import useLocation\r\n\r\nconst ComplaintCard = ({ complaint, onUpdate, onDelete }) => {\r\n\r\n  // Get the user from the context\r\n  const { user } = useContext(AuthContext);\r\n  const userEmail = user.email;\r\n\r\n  // Get the current route\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <div className=\"card-big my-3 bg-light\">\r\n      <div className=\"card-body text-center\">\r\n        <h4 className=\"card-title\">{complaint.title}</h4>\r\n        <p className=\"card-text\">{complaint.description}</p>\r\n        <p className=\"card-text\">\r\n          <small className=\"text-muted\">\r\n            Status: {complaint.status} | Date:{\" \"}\r\n            {new Date(complaint.dateCreated).toLocaleDateString()}\r\n          </small>\r\n          <br/> <br/>\r\n          \r\n          <small className=\"text-muted\">\r\n            By: {complaint.fullName}\r\n          </small>\r\n        </p>\r\n        <br/>\r\n        {/* Conditionally render buttons based on userEmail or route */}\r\n        {(userEmail === \"gideonagyage@gmail.com\" || location.pathname === '/db-customer') && (\r\n          <div className=\"d-flex justify-content-end\">\r\n            <button\r\n              className=\"btn btn-w btn-primary mr-2\"\r\n              onClick={() => onUpdate(complaint)}\r\n            >\r\n              Edit\r\n            </button>\r\n            <button\r\n              className=\"btn btn-w btn-danger\"\r\n              onClick={() => onDelete(complaint.id)}\r\n            >\r\n              Delete\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplaintCard;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../Auth/AuthProvider\";\r\nimport ComplaintCard from \"../ComplaintCard/ComplaintCard\";\r\nimport \"./Dashboard.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst DashboardCustomer = () => {\r\n\r\nconsole.log(\"Component: CustomerDashboard\");\r\nconst [userComplaints, setUserComplaints] = useState([]);\r\nconst navigate = useNavigate(); // Initialize useNavigate\r\n\r\n// Get the user from the context\r\nconst { user } = useContext(AuthContext);\r\nconst userEmail = user.email;\r\n\r\n// Function to fetch complaints from localStorage\r\nconst fetchComplaints = () => {\r\n  const storedComplaints = localStorage.getItem(\"complaints\");\r\n  if (storedComplaints) {\r\n    setUserComplaints(JSON.parse(storedComplaints));\r\n  }\r\n};\r\n\r\n// Function to save complaints to localStorage\r\nconst saveComplaints = (complaints) => {\r\n  localStorage.setItem(\"complaints\", JSON.stringify(complaints));\r\n};\r\n\r\n// Load complaints on component mount\r\nuseEffect(() => {\r\n  fetchComplaints();\r\n}, []);\r\n\r\n// Function to add a new complaint\r\nconst addComplaint = (newComplaint) => {\r\n  // Generate a unique ID for the new complaint\r\n  const newId = Date.now().toString();\r\n  const updatedComplaints = [...userComplaints, { ...newComplaint, id: newId }];\r\n  setUserComplaints(updatedComplaints);\r\n  saveComplaints(updatedComplaints);\r\n};\r\n\r\n// Function to update a complaint\r\nconst updateComplaint = (updatedComplaint) => {\r\n  // Navigate to the ComplaintForm component with the complaint ID\r\n  navigate(`/complaint-form-update/${updatedComplaint.id}`); \r\n};\r\n\r\n// Function to delete a complaint\r\nconst deleteComplaint = (complaintId) => {\r\n  const updatedComplaints = userComplaints.filter(\r\n    (complaint) => complaint.id !== complaintId\r\n  );\r\n  setUserComplaints(updatedComplaints);\r\n  saveComplaints(updatedComplaints);\r\n};\r\n\r\nreturn (\r\n  <div className=\"dashboard-container full-height\">\r\n    <div className=\"card m-4 p-2\">\r\n      <h3 className=\"m-3 text-blue\"> Hi, @{user.email} </h3>\r\n    </div>\r\n\r\n    <div className=\"text-center m-4\">\r\n      {/* Complaints Section */}\r\n      <div className=\"complaints-section\">\r\n        <div className=\"card p-3 bg-mid-gray\">\r\n          <h5 className=\"card-heading text-center\">Submitted Complaints</h5>\r\n          {userComplaints.length > 0 ? (\r\n            <div className=\"text-center\">\r\n            {userComplaints.map((complaint) => (\r\n              <div key={complaint.id} className=\"text-center\">\r\n                <ComplaintCard\r\n                  complaint={complaint}\r\n                  onUpdate={updateComplaint}\r\n                  onDelete={deleteComplaint}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          ) : (\r\n            <p>No complaints submitted yet.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    {/* Other relevant sections*/}\r\n  </div>\r\n);\r\n};\r\n\r\nexport default DashboardCustomer;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../Auth/AuthProvider\";\r\nimport ComplaintCard from \"../ComplaintCard/ComplaintCard\";\r\nimport \"./Dashboard.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst DashboardStaff = () => {\r\n\r\nconsole.log(\"Component: StaffDashboard\");\r\nconst [userComplaints, setUserComplaints] = useState([]);\r\nconst navigate = useNavigate(); // Initialize useNavigate\r\n\r\n// Get the user from the context\r\nconst { user } = useContext(AuthContext);\r\nconst userEmail = user.email;\r\n\r\n// Function to fetch complaints from localStorage\r\nconst fetchComplaints = () => {\r\n  const storedComplaints = localStorage.getItem(\"complaints\");\r\n  if (storedComplaints) {\r\n    setUserComplaints(JSON.parse(storedComplaints));\r\n  }\r\n};\r\n\r\n// Function to save complaints to localStorage\r\nconst saveComplaints = (complaints) => {\r\n  localStorage.setItem(\"complaints\", JSON.stringify(complaints));\r\n};\r\n\r\n// Load complaints on component mount\r\nuseEffect(() => {\r\n  fetchComplaints();\r\n}, []);\r\n\r\n// Function to add a new complaint\r\nconst addComplaint = (newComplaint) => {\r\n  // Generate a unique ID for the new complaint\r\n  const newId = Date.now().toString();\r\n  const updatedComplaints = [...userComplaints, { ...newComplaint, id: newId }];\r\n  setUserComplaints(updatedComplaints);\r\n  saveComplaints(updatedComplaints);\r\n};\r\n\r\n// Function to update a complaint\r\nconst updateComplaint = (updatedComplaint) => {\r\n  // Navigate to the ComplaintForm component with the complaint ID\r\n  navigate(`/complaint-form-update/${updatedComplaint.id}`); \r\n};\r\n\r\n// Function to delete a complaint\r\nconst deleteComplaint = (complaintId) => {\r\n  const updatedComplaints = userComplaints.filter(\r\n    (complaint) => complaint.id !== complaintId\r\n  );\r\n  setUserComplaints(updatedComplaints);\r\n  saveComplaints(updatedComplaints);\r\n};\r\n\r\nreturn (\r\n  <div className=\"dashboard-container full-height\">\r\n    <div className=\"card m-4 p-2\">\r\n      <h3 className=\"m-3 text-blue\"> Welcome, Nicholas Amissah | Staff </h3>\r\n    </div>\r\n\r\n    <div className=\"text-center m-4\">\r\n      {/* Complaints Section */}\r\n      <div className=\"complaints-section\">\r\n        <div className=\"card p-3 bg-mid-gray\">\r\n          <h5 className=\"card-heading text-center\">Submitted Complaints</h5>\r\n          {userComplaints.length > 0 ? (\r\n            <div className=\"text-center\">\r\n            {userComplaints.map((complaint) => (\r\n              <div key={complaint.id} className=\"text-center\">\r\n                <ComplaintCard\r\n                  complaint={complaint}\r\n                  onUpdate={updateComplaint}\r\n                  onDelete={deleteComplaint}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          ) : (\r\n            <p>No complaints submitted yet.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    {/* Other relevant sections*/}\r\n  </div>\r\n);\r\n};\r\n\r\nexport default DashboardStaff;\r\n","import React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../Auth/AuthProvider\";\r\nimport ComplaintCard from \"../ComplaintCard/ComplaintCard\";\r\nimport \"./Dashboard.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst DashboardAdmin = () => {\r\n\r\nconsole.log(\"Component: AdminDashboard\");\r\n\r\nconst [userComplaints, setUserComplaints] = useState([]);\r\nconst navigate = useNavigate(); // Initialize useNavigate\r\n\r\n// Get the user from the context\r\nconst { user } = useContext(AuthContext);\r\nconst userEmail = user.email;\r\n\r\n// Function to fetch complaints from localStorage\r\nconst fetchComplaints = () => {\r\n  const storedComplaints = localStorage.getItem(\"complaints\");\r\n  if (storedComplaints) {\r\n    setUserComplaints(JSON.parse(storedComplaints));\r\n  }\r\n};\r\n\r\n// Function to save complaints to localStorage\r\nconst saveComplaints = (complaints) => {\r\n  localStorage.setItem(\"complaints\", JSON.stringify(complaints));\r\n};\r\n\r\n// Load complaints on component mount\r\nuseEffect(() => {\r\n  fetchComplaints();\r\n}, []);\r\n\r\n// Function to add a new complaint\r\nconst addComplaint = (newComplaint) => {\r\n  // Generate a unique ID for the new complaint\r\n  const newId = Date.now().toString();\r\n  const updatedComplaints = [...userComplaints, { ...newComplaint, id: newId }];\r\n  setUserComplaints(updatedComplaints);\r\n  saveComplaints(updatedComplaints);\r\n};\r\n\r\n// Function to update a complaint\r\nconst updateComplaint = (updatedComplaint) => {\r\n  // Navigate to the ComplaintForm component with the complaint ID\r\n  navigate(`/complaint-form-update/${updatedComplaint.id}`); \r\n};\r\n\r\n// Function to delete a complaint\r\nconst deleteComplaint = (complaintId) => {\r\n  const updatedComplaints = userComplaints.filter(\r\n    (complaint) => complaint.id !== complaintId\r\n  );\r\n  setUserComplaints(updatedComplaints);\r\n  saveComplaints(updatedComplaints);\r\n};\r\n\r\nreturn (\r\n  <div className=\"dashboard-container full-height\">\r\n    <div className=\"card m-4 p-2\">\r\n      <h3 className=\"m-3 text-blue\"> Welcome, Gideon Agyage | Admin </h3>\r\n    </div>\r\n\r\n    <div className=\"text-center m-4\">\r\n      {/* Complaints Section */}\r\n      <div className=\"complaints-section\">\r\n        <div className=\"card p-3 bg-mid-gray\">\r\n          <h5 className=\"card-heading text-center\">Submitted Complaints</h5>\r\n          {userComplaints.length > 0 ? (\r\n            <div className=\"text-center\">\r\n            {userComplaints.map((complaint) => (\r\n              <div key={complaint.id} className=\"text-center\">\r\n                <ComplaintCard\r\n                  complaint={complaint}\r\n                  onUpdate={updateComplaint}\r\n                  onDelete={deleteComplaint}\r\n                />\r\n              </div>\r\n            ))}\r\n          </div>\r\n          ) : (\r\n            <p>No complaints submitted yet.</p>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n\r\n    {/* Other relevant sections*/}\r\n  </div>\r\n);\r\n};\r\n\r\nexport default DashboardAdmin;\r\n","// DashboardSuperAdmin.js\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport { AuthContext } from \"../Auth/AuthProvider\";\r\nimport ComplaintCard from \"../ComplaintCard/ComplaintCard\";\r\nimport \"./Dashboard.css\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\nconst DashboardSuperAdmin = () => {\r\n  console.log(\"Component: SuperAdminDashboard\");\r\n\r\n  const [userComplaints, setUserComplaints] = useState([]);\r\n  const navigate = useNavigate(); // Initialize useNavigate\r\n\r\n  // Get the user from the context\r\n  const { user } = useContext(AuthContext);\r\n  const userEmail = user.email;\r\n\r\n  // Function to fetch complaints from localStorage\r\n  const fetchComplaints = () => {\r\n    const storedComplaints = localStorage.getItem(\"complaints\");\r\n    if (storedComplaints) {\r\n      setUserComplaints(JSON.parse(storedComplaints));\r\n    }\r\n  };\r\n\r\n  // Function to save complaints to localStorage\r\n  const saveComplaints = (complaints) => {\r\n    localStorage.setItem(\"complaints\", JSON.stringify(complaints));\r\n  };\r\n\r\n  // Load complaints on component mount\r\n  useEffect(() => {\r\n    fetchComplaints();\r\n  }, []);\r\n\r\n  // Function to add a new complaint\r\n  const addComplaint = (newComplaint) => {\r\n    // Generate a unique ID for the new complaint\r\n    const newId = Date.now().toString();\r\n    const updatedComplaints = [...userComplaints, { ...newComplaint, id: newId }];\r\n    setUserComplaints(updatedComplaints);\r\n    saveComplaints(updatedComplaints);\r\n  };\r\n\r\n  // Function to update a complaint\r\n  const updateComplaint = (updatedComplaint) => {\r\n    // Navigate to the ComplaintForm component with the complaint ID\r\n    navigate(`/complaint-form-update/${updatedComplaint.id}`); \r\n  };\r\n\r\n  // Function to delete a complaint\r\n  const deleteComplaint = (complaintId) => {\r\n    const updatedComplaints = userComplaints.filter(\r\n      (complaint) => complaint.id !== complaintId\r\n    );\r\n    setUserComplaints(updatedComplaints);\r\n    saveComplaints(updatedComplaints);\r\n  };\r\n\r\n  return (\r\n    <div className=\"dashboard-container full-height\">\r\n      <div className=\"card m-4 p-2\">\r\n        <h3 className=\"m-3 text-blue\"> Welcome, Gideon Agyage | Super Admin </h3>\r\n      </div>\r\n\r\n      <div className=\"text-center m-4\">\r\n        {/* Complaints Section */}\r\n        <div className=\"complaints-section\">\r\n          <div className=\"card p-3 bg-mid-gray\">\r\n            <h5 className=\"card-heading text-center\">Submitted Complaints</h5>\r\n            {userComplaints.length > 0 ? (\r\n              <div className=\"text-center\">\r\n              {userComplaints.map((complaint) => (\r\n                <div key={complaint.id} className=\"text-center\">\r\n                  <ComplaintCard\r\n                    complaint={complaint}\r\n                    onUpdate={updateComplaint}\r\n                    onDelete={deleteComplaint}\r\n                  />\r\n                </div>\r\n              ))}\r\n            </div>\r\n            ) : (\r\n              <p>No complaints submitted yet.</p>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Other relevant sections*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DashboardSuperAdmin;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport \"./ComplaintForm.css\";\r\nimport { Formik, Form, Field, ErrorMessage } from \"formik\";\r\nimport * as Yup from \"yup\";\r\nimport { useNavigate, useParams } from \"react-router-dom\";\r\nimport Modal from \"../Modal/Modal\";\r\n\r\n\r\nconst ComplaintFormSchema = Yup.object().shape({\r\n  fullName: Yup.string().required(\"Full name is required\"),\r\n  email: Yup.string().email(\"Invalid email\").required(\"Email is required\"),\r\n  contactNumber: Yup.string().required(\"Contact number is required\"),\r\n  category: Yup.string().required(\"Please select a category\"),\r\n  description: Yup.string().required(\"Description is required\"),\r\n  preferredContactMethod: Yup.string().required(\r\n    \"Please select a preferred contact method\"\r\n  ),\r\n});\r\n\r\nconst ComplaintFormUpdate = () => {\r\n  const [showModal, setShowModal] = useState(false);\r\n  const [modalContent, setModalContent] = useState(\"\");\r\n  const history = useNavigate();\r\n  const { complaintId } = useParams(); // Get the complaint ID from the URL\r\n\r\n  const closeModal = () => {\r\n    setShowModal(false);\r\n    console.log(\"Closed the Modal\");\r\n  };\r\n\r\n  const [initialValues, setInitialValues] = useState({\r\n    fullName: \"\",\r\n    contactNumber: \"\",\r\n    category: \"\",\r\n    description: \"\",\r\n    preferredContactMethod: \"\",\r\n  });\r\n\r\n  useEffect(() => {\r\n    // Fetch the complaint from localStorage based on the complaintId\r\n    const storedComplaints = localStorage.getItem(\"complaints\");\r\n    if (storedComplaints) {\r\n      const complaints = JSON.parse(storedComplaints);\r\n      const foundComplaint = complaints.find((c) => c.id === complaintId);\r\n      if (foundComplaint) {\r\n        setInitialValues(foundComplaint);\r\n      }\r\n    }\r\n  }, [complaintId]);\r\n\r\n  const handleComplaintSubmit = (values, { resetForm }) => {\r\n    // Update the complaint in localStorage\r\n    const storedComplaints = localStorage.getItem(\"complaints\");\r\n    let complaints = [];\r\n    if (storedComplaints) {\r\n      complaints = JSON.parse(storedComplaints);\r\n    }\r\n\r\n    // Find the complaint to update\r\n    const index = complaints.findIndex((c) => c.id === complaintId);\r\n    if (index !== -1) {\r\n      complaints[index] = { ...complaints[index], ...values };\r\n      localStorage.setItem(\"complaints\", JSON.stringify(complaints));\r\n\r\n      console.log(\"Complaint updated:\", complaints[index]);\r\n\r\n      // Redirect to success page\r\n      history.push(\"/success\");\r\n\r\n      // Show the modal for 3 seconds\r\n      setModalContent(\r\n        <div className=\"text-center my-3\">\r\n          <h1>Complaint Updated successfully.</h1>\r\n        </div>\r\n      );\r\n      setShowModal(true);\r\n      setTimeout(() => {\r\n        setShowModal(false);\r\n        resetForm();\r\n      }, 3000);\r\n    } else {\r\n      console.error(\"Complaint not found for update.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"container mt-2 full-height\">\r\n      <div className=\"form-title\">\r\n        <h2 className=\"text-center form-title-text\">Update Complaint</h2>\r\n      </div>\r\n\r\n      <Formik\r\n        initialValues={initialValues} // Use the fetched initial values\r\n        validationSchema={ComplaintFormSchema}\r\n        onSubmit={handleComplaintSubmit}\r\n      >\r\n        {({ isSubmitting, resetForm }) => (\r\n          <div className=\"row justify-content-center signing-form\">\r\n            <div className=\"col-md-7 col-lg-6\">\r\n              <div className=\"login-wrap p-0\">\r\n                <Form className=\"col-12 d-block m-0\">\r\n                  {/* Full name */}\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"fullName\">Full Name:</label>\r\n                    <Field\r\n                      name=\"fullName\"\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"fullName\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Contact Number */}\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"contactNumber\">Contact Number:</label>\r\n                    <Field\r\n                      name=\"contactNumber\"\r\n                      type=\"tel\"\r\n                      className=\"form-control\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"contactNumber\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Category */}\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"category\">Category:</label>\r\n                    <Field name=\"category\" as=\"select\" className=\"form-control\">\r\n                      <option value=\"\">Select category</option>\r\n                      <option value=\"Service\">Service</option>\r\n                      <option value=\"Product\">Product</option>\r\n                      <option value=\"Staff Conduct\">Staff Conduct</option>\r\n                    </Field>\r\n                    <ErrorMessage\r\n                      name=\"category\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Description with textarea */}\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"description\">Description:</label>\r\n                    <Field\r\n                      name=\"description\"\r\n                      as=\"textarea\"\r\n                      className=\"form-control\"\r\n                    />\r\n                    <ErrorMessage\r\n                      name=\"description\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n\r\n                  {/* Preferred Contact Method */}\r\n                  <div className=\"form-group\">\r\n                    <label htmlFor=\"preferredContactMethod\">\r\n                      Preferred Contact Method:\r\n                    </label>\r\n                    <Field\r\n                      name=\"preferredContactMethod\"\r\n                      as=\"select\"\r\n                      className=\"form-control\"\r\n                    >\r\n                      <option value=\"\">Please select</option>\r\n                      <option value=\"Phone\">Phone</option>\r\n                      <option value=\"WhatsApp\">WhatsApp</option>\r\n                    </Field>\r\n                    <ErrorMessage\r\n                      name=\"preferredContactMethod\"\r\n                      component=\"div\"\r\n                      className=\"text-danger\"\r\n                    />\r\n                  </div>\r\n                  {/* Update and Reset Buttons */}\r\n                  <div className=\"form-group mt-5 mb-5 text-end\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn-submit mx-4\"\r\n                      disabled={isSubmitting}\r\n                    >\r\n                      Update\r\n                    </button>\r\n                    <button type=\"reset\" className=\"btn-reset\">\r\n                      Reset\r\n                    </button>\r\n                  </div>\r\n                </Form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </Formik>\r\n\r\n      {/* Modal */}\r\n      <Modal show={showModal} onClose={closeModal}>\r\n        {modalContent}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ComplaintFormUpdate;\r\n","import React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"bootstrap/dist/js/bootstrap.bundle.min\";\n\nimport \"./App.css\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\";\nimport ComplaintForm from \"./components/ComplaintForm/ComplaintForm\";\nimport Complaint from \"./components/Complaint/Complaint\";\nimport Loading from \"./components/Loading/Loading\";\nimport Error from \"./components/Error/Error\";\nimport Home from \"./components/Home/Home\";\nimport Signing from \"./components/Signing/Signing\";\nimport Profile from \"./components/Profile/Profile\";\nimport ContactMe from \"./components/ContactMe/ContactMe\";\nimport PrivateRoute from \"./components/Auth/PrivateRoute\";\nimport DashboardCustomer from \"./components/Dashboard/DashboardCustomer\";\nimport DashboardStaff from \"./components/Dashboard/DashboardStaff\";\nimport DashboardAdmin from \"./components/Dashboard/DashBoardAdmin\";\nimport DashboardSuperAdmin from \"./components/Dashboard/DashboardSuperAdmin\";\nimport ComplaintFormUpdate from \"./components/ComplaintForm/ComplaintFormUpdate\";\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setIsLoading(false);\n    }, 1000); // Change and add logic to end loading after fetching API data\n\n    return () => clearTimeout(timeout);\n  }, []);\n\n  return (\n    <Router>\n      <div className=\"app-container\">\n        {/* Using useState and useEffect to determine when the Loading shows or disappears */}\n        {isLoading && <Loading />}\n\n        {/* Customed Header for other Components */}\n        <Header />\n\n        <Routes>\n          <Route path=\"/\" element={<Home />} />\n          <Route path=\"/signing\" element={<Signing />} />\n          <Route path=\"*\" element={<Error />} />\n          <Route path=\"/contact-me\" element={<ContactMe />} />\n\n          <Route element={<PrivateRoute />}>\n            <Route path=\"/db-customer\" element={<DashboardCustomer />} />\n            <Route path=\"/db-staff\" element={<DashboardStaff />} />\n            <Route path=\"/db-admin\" element={<DashboardAdmin />} />\n            <Route path=\"/db-super-admin\" element={<DashboardSuperAdmin />} />\n            <Route path=\"/profile\" element={<Profile />} />\n            <Route path=\"/complaint-form\" element={<ComplaintForm />} />\n            <Route path=\"/complaint-form-update/:complaintId?\" element={<ComplaintFormUpdate />} />\n            <Route path=\"/complaints\" element={<Complaint />} />\n          </Route>\n        </Routes>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport { AuthProvider } from '../src/components/Auth/AuthProvider';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>\n);\n\nreportWebVitals();\n"],"sourceRoot":""}